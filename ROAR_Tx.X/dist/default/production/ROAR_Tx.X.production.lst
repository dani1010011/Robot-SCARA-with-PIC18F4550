

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 02 21:34:55 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 17/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000FE0                     bsr             equ	4064
    61   000FE9                     fsr0            equ	4073
    62   000FEA                     fsr0h           equ	4074
    63   000FE9                     fsr0l           equ	4073
    64   000FE1                     fsr1            equ	4065
    65   000FE2                     fsr1h           equ	4066
    66   000FE1                     fsr1l           equ	4065
    67   000FD9                     fsr2            equ	4057
    68   000FDA                     fsr2h           equ	4058
    69   000FD9                     fsr2l           equ	4057
    70   000FEF                     indf0           equ	4079
    71   000FE7                     indf1           equ	4071
    72   000FDF                     indf2           equ	4063
    73   000FF2                     intcon          equ	4082
    74   000000                     nvmcon          equ	0
    75   000FF9                     pcl             equ	4089
    76   000FFA                     pclath          equ	4090
    77   000FFB                     pclatu          equ	4091
    78   000FEB                     plusw0          equ	4075
    79   000FE3                     plusw1          equ	4067
    80   000FDB                     plusw2          equ	4059
    81   000FED                     postdec0        equ	4077
    82   000FE5                     postdec1        equ	4069
    83   000FDD                     postdec2        equ	4061
    84   000FEE                     postinc0        equ	4078
    85   000FE6                     postinc1        equ	4070
    86   000FDE                     postinc2        equ	4062
    87   000FEC                     preinc0         equ	4076
    88   000FE4                     preinc1         equ	4068
    89   000FDC                     preinc2         equ	4060
    90   000FF3                     prod            equ	4083
    91   000FF4                     prodh           equ	4084
    92   000FF3                     prodl           equ	4083
    93   000FD8                     status          equ	4056
    94   000FF5                     tablat          equ	4085
    95   000FF6                     tblptr          equ	4086
    96   000FF7                     tblptrh         equ	4087
    97   000FF6                     tblptrl         equ	4086
    98   000FF8                     tblptru         equ	4088
    99   000FFD                     tosl            equ	4093
   100   000FE8                     wreg            equ	4072
   101   000F62                     SPPDATA         equ	3938	;# 
   102   000F63                     SPPCFG          equ	3939	;# 
   103   000F64                     SPPEPS          equ	3940	;# 
   104   000F65                     SPPCON          equ	3941	;# 
   105   000F66                     UFRM            equ	3942	;# 
   106   000F66                     UFRML           equ	3942	;# 
   107   000F67                     UFRMH           equ	3943	;# 
   108   000F68                     UIR             equ	3944	;# 
   109   000F69                     UIE             equ	3945	;# 
   110   000F6A                     UEIR            equ	3946	;# 
   111   000F6B                     UEIE            equ	3947	;# 
   112   000F6C                     USTAT           equ	3948	;# 
   113   000F6D                     UCON            equ	3949	;# 
   114   000F6E                     UADDR           equ	3950	;# 
   115   000F6F                     UCFG            equ	3951	;# 
   116   000F70                     UEP0            equ	3952	;# 
   117   000F71                     UEP1            equ	3953	;# 
   118   000F72                     UEP2            equ	3954	;# 
   119   000F73                     UEP3            equ	3955	;# 
   120   000F74                     UEP4            equ	3956	;# 
   121   000F75                     UEP5            equ	3957	;# 
   122   000F76                     UEP6            equ	3958	;# 
   123   000F77                     UEP7            equ	3959	;# 
   124   000F78                     UEP8            equ	3960	;# 
   125   000F79                     UEP9            equ	3961	;# 
   126   000F7A                     UEP10           equ	3962	;# 
   127   000F7B                     UEP11           equ	3963	;# 
   128   000F7C                     UEP12           equ	3964	;# 
   129   000F7D                     UEP13           equ	3965	;# 
   130   000F7E                     UEP14           equ	3966	;# 
   131   000F7F                     UEP15           equ	3967	;# 
   132   000F80                     PORTA           equ	3968	;# 
   133   000F81                     PORTB           equ	3969	;# 
   134   000F82                     PORTC           equ	3970	;# 
   135   000F83                     PORTD           equ	3971	;# 
   136   000F84                     PORTE           equ	3972	;# 
   137   000F89                     LATA            equ	3977	;# 
   138   000F8A                     LATB            equ	3978	;# 
   139   000F8B                     LATC            equ	3979	;# 
   140   000F8C                     LATD            equ	3980	;# 
   141   000F8D                     LATE            equ	3981	;# 
   142   000F92                     TRISA           equ	3986	;# 
   143   000F92                     DDRA            equ	3986	;# 
   144   000F93                     TRISB           equ	3987	;# 
   145   000F93                     DDRB            equ	3987	;# 
   146   000F94                     TRISC           equ	3988	;# 
   147   000F94                     DDRC            equ	3988	;# 
   148   000F95                     TRISD           equ	3989	;# 
   149   000F95                     DDRD            equ	3989	;# 
   150   000F96                     TRISE           equ	3990	;# 
   151   000F96                     DDRE            equ	3990	;# 
   152   000F9B                     OSCTUNE         equ	3995	;# 
   153   000F9D                     PIE1            equ	3997	;# 
   154   000F9E                     PIR1            equ	3998	;# 
   155   000F9F                     IPR1            equ	3999	;# 
   156   000FA0                     PIE2            equ	4000	;# 
   157   000FA1                     PIR2            equ	4001	;# 
   158   000FA2                     IPR2            equ	4002	;# 
   159   000FA6                     EECON1          equ	4006	;# 
   160   000FA7                     EECON2          equ	4007	;# 
   161   000FA8                     EEDATA          equ	4008	;# 
   162   000FA9                     EEADR           equ	4009	;# 
   163   000FAB                     RCSTA           equ	4011	;# 
   164   000FAB                     RCSTA1          equ	4011	;# 
   165   000FAC                     TXSTA           equ	4012	;# 
   166   000FAC                     TXSTA1          equ	4012	;# 
   167   000FAD                     TXREG           equ	4013	;# 
   168   000FAD                     TXREG1          equ	4013	;# 
   169   000FAE                     RCREG           equ	4014	;# 
   170   000FAE                     RCREG1          equ	4014	;# 
   171   000FAF                     SPBRG           equ	4015	;# 
   172   000FAF                     SPBRG1          equ	4015	;# 
   173   000FB0                     SPBRGH          equ	4016	;# 
   174   000FB1                     T3CON           equ	4017	;# 
   175   000FB2                     TMR3            equ	4018	;# 
   176   000FB2                     TMR3L           equ	4018	;# 
   177   000FB3                     TMR3H           equ	4019	;# 
   178   000FB4                     CMCON           equ	4020	;# 
   179   000FB5                     CVRCON          equ	4021	;# 
   180   000FB6                     ECCP1AS         equ	4022	;# 
   181   000FB6                     CCP1AS          equ	4022	;# 
   182   000FB7                     ECCP1DEL        equ	4023	;# 
   183   000FB7                     CCP1DEL         equ	4023	;# 
   184   000FB8                     BAUDCON         equ	4024	;# 
   185   000FB8                     BAUDCTL         equ	4024	;# 
   186   000FBA                     CCP2CON         equ	4026	;# 
   187   000FBB                     CCPR2           equ	4027	;# 
   188   000FBB                     CCPR2L          equ	4027	;# 
   189   000FBC                     CCPR2H          equ	4028	;# 
   190   000FBD                     CCP1CON         equ	4029	;# 
   191   000FBD                     ECCP1CON        equ	4029	;# 
   192   000FBE                     CCPR1           equ	4030	;# 
   193   000FBE                     CCPR1L          equ	4030	;# 
   194   000FBF                     CCPR1H          equ	4031	;# 
   195   000FC0                     ADCON2          equ	4032	;# 
   196   000FC1                     ADCON1          equ	4033	;# 
   197   000FC2                     ADCON0          equ	4034	;# 
   198   000FC3                     ADRES           equ	4035	;# 
   199   000FC3                     ADRESL          equ	4035	;# 
   200   000FC4                     ADRESH          equ	4036	;# 
   201   000FC5                     SSPCON2         equ	4037	;# 
   202   000FC6                     SSPCON1         equ	4038	;# 
   203   000FC7                     SSPSTAT         equ	4039	;# 
   204   000FC8                     SSPADD          equ	4040	;# 
   205   000FC9                     SSPBUF          equ	4041	;# 
   206   000FCA                     T2CON           equ	4042	;# 
   207   000FCB                     PR2             equ	4043	;# 
   208   000FCB                     MEMCON          equ	4043	;# 
   209   000FCC                     TMR2            equ	4044	;# 
   210   000FCD                     T1CON           equ	4045	;# 
   211   000FCE                     TMR1            equ	4046	;# 
   212   000FCE                     TMR1L           equ	4046	;# 
   213   000FCF                     TMR1H           equ	4047	;# 
   214   000FD0                     RCON            equ	4048	;# 
   215   000FD1                     WDTCON          equ	4049	;# 
   216   000FD2                     HLVDCON         equ	4050	;# 
   217   000FD2                     LVDCON          equ	4050	;# 
   218   000FD3                     OSCCON          equ	4051	;# 
   219   000FD5                     T0CON           equ	4053	;# 
   220   000FD6                     TMR0            equ	4054	;# 
   221   000FD6                     TMR0L           equ	4054	;# 
   222   000FD7                     TMR0H           equ	4055	;# 
   223   000FD8                     STATUS          equ	4056	;# 
   224   000FD9                     FSR2            equ	4057	;# 
   225   000FD9                     FSR2L           equ	4057	;# 
   226   000FDA                     FSR2H           equ	4058	;# 
   227   000FDB                     PLUSW2          equ	4059	;# 
   228   000FDC                     PREINC2         equ	4060	;# 
   229   000FDD                     POSTDEC2        equ	4061	;# 
   230   000FDE                     POSTINC2        equ	4062	;# 
   231   000FDF                     INDF2           equ	4063	;# 
   232   000FE0                     BSR             equ	4064	;# 
   233   000FE1                     FSR1            equ	4065	;# 
   234   000FE1                     FSR1L           equ	4065	;# 
   235   000FE2                     FSR1H           equ	4066	;# 
   236   000FE3                     PLUSW1          equ	4067	;# 
   237   000FE4                     PREINC1         equ	4068	;# 
   238   000FE5                     POSTDEC1        equ	4069	;# 
   239   000FE6                     POSTINC1        equ	4070	;# 
   240   000FE7                     INDF1           equ	4071	;# 
   241   000FE8                     WREG            equ	4072	;# 
   242   000FE9                     FSR0            equ	4073	;# 
   243   000FE9                     FSR0L           equ	4073	;# 
   244   000FEA                     FSR0H           equ	4074	;# 
   245   000FEB                     PLUSW0          equ	4075	;# 
   246   000FEC                     PREINC0         equ	4076	;# 
   247   000FED                     POSTDEC0        equ	4077	;# 
   248   000FEE                     POSTINC0        equ	4078	;# 
   249   000FEF                     INDF0           equ	4079	;# 
   250   000FF0                     INTCON3         equ	4080	;# 
   251   000FF1                     INTCON2         equ	4081	;# 
   252   000FF2                     INTCON          equ	4082	;# 
   253   000FF3                     PROD            equ	4083	;# 
   254   000FF3                     PRODL           equ	4083	;# 
   255   000FF4                     PRODH           equ	4084	;# 
   256   000FF5                     TABLAT          equ	4085	;# 
   257   000FF6                     TBLPTR          equ	4086	;# 
   258   000FF6                     TBLPTRL         equ	4086	;# 
   259   000FF7                     TBLPTRH         equ	4087	;# 
   260   000FF8                     TBLPTRU         equ	4088	;# 
   261   000FF9                     PCLAT           equ	4089	;# 
   262   000FF9                     PC              equ	4089	;# 
   263   000FF9                     PCL             equ	4089	;# 
   264   000FFA                     PCLATH          equ	4090	;# 
   265   000FFB                     PCLATU          equ	4091	;# 
   266   000FFC                     STKPTR          equ	4092	;# 
   267   000FFD                     TOS             equ	4093	;# 
   268   000FFD                     TOSL            equ	4093	;# 
   269   000FFE                     TOSH            equ	4094	;# 
   270   000FFF                     TOSU            equ	4095	;# 
   271   000F62                     SPPDATA         equ	3938	;# 
   272   000F63                     SPPCFG          equ	3939	;# 
   273   000F64                     SPPEPS          equ	3940	;# 
   274   000F65                     SPPCON          equ	3941	;# 
   275   000F66                     UFRM            equ	3942	;# 
   276   000F66                     UFRML           equ	3942	;# 
   277   000F67                     UFRMH           equ	3943	;# 
   278   000F68                     UIR             equ	3944	;# 
   279   000F69                     UIE             equ	3945	;# 
   280   000F6A                     UEIR            equ	3946	;# 
   281   000F6B                     UEIE            equ	3947	;# 
   282   000F6C                     USTAT           equ	3948	;# 
   283   000F6D                     UCON            equ	3949	;# 
   284   000F6E                     UADDR           equ	3950	;# 
   285   000F6F                     UCFG            equ	3951	;# 
   286   000F70                     UEP0            equ	3952	;# 
   287   000F71                     UEP1            equ	3953	;# 
   288   000F72                     UEP2            equ	3954	;# 
   289   000F73                     UEP3            equ	3955	;# 
   290   000F74                     UEP4            equ	3956	;# 
   291   000F75                     UEP5            equ	3957	;# 
   292   000F76                     UEP6            equ	3958	;# 
   293   000F77                     UEP7            equ	3959	;# 
   294   000F78                     UEP8            equ	3960	;# 
   295   000F79                     UEP9            equ	3961	;# 
   296   000F7A                     UEP10           equ	3962	;# 
   297   000F7B                     UEP11           equ	3963	;# 
   298   000F7C                     UEP12           equ	3964	;# 
   299   000F7D                     UEP13           equ	3965	;# 
   300   000F7E                     UEP14           equ	3966	;# 
   301   000F7F                     UEP15           equ	3967	;# 
   302   000F80                     PORTA           equ	3968	;# 
   303   000F81                     PORTB           equ	3969	;# 
   304   000F82                     PORTC           equ	3970	;# 
   305   000F83                     PORTD           equ	3971	;# 
   306   000F84                     PORTE           equ	3972	;# 
   307   000F89                     LATA            equ	3977	;# 
   308   000F8A                     LATB            equ	3978	;# 
   309   000F8B                     LATC            equ	3979	;# 
   310   000F8C                     LATD            equ	3980	;# 
   311   000F8D                     LATE            equ	3981	;# 
   312   000F92                     TRISA           equ	3986	;# 
   313   000F92                     DDRA            equ	3986	;# 
   314   000F93                     TRISB           equ	3987	;# 
   315   000F93                     DDRB            equ	3987	;# 
   316   000F94                     TRISC           equ	3988	;# 
   317   000F94                     DDRC            equ	3988	;# 
   318   000F95                     TRISD           equ	3989	;# 
   319   000F95                     DDRD            equ	3989	;# 
   320   000F96                     TRISE           equ	3990	;# 
   321   000F96                     DDRE            equ	3990	;# 
   322   000F9B                     OSCTUNE         equ	3995	;# 
   323   000F9D                     PIE1            equ	3997	;# 
   324   000F9E                     PIR1            equ	3998	;# 
   325   000F9F                     IPR1            equ	3999	;# 
   326   000FA0                     PIE2            equ	4000	;# 
   327   000FA1                     PIR2            equ	4001	;# 
   328   000FA2                     IPR2            equ	4002	;# 
   329   000FA6                     EECON1          equ	4006	;# 
   330   000FA7                     EECON2          equ	4007	;# 
   331   000FA8                     EEDATA          equ	4008	;# 
   332   000FA9                     EEADR           equ	4009	;# 
   333   000FAB                     RCSTA           equ	4011	;# 
   334   000FAB                     RCSTA1          equ	4011	;# 
   335   000FAC                     TXSTA           equ	4012	;# 
   336   000FAC                     TXSTA1          equ	4012	;# 
   337   000FAD                     TXREG           equ	4013	;# 
   338   000FAD                     TXREG1          equ	4013	;# 
   339   000FAE                     RCREG           equ	4014	;# 
   340   000FAE                     RCREG1          equ	4014	;# 
   341   000FAF                     SPBRG           equ	4015	;# 
   342   000FAF                     SPBRG1          equ	4015	;# 
   343   000FB0                     SPBRGH          equ	4016	;# 
   344   000FB1                     T3CON           equ	4017	;# 
   345   000FB2                     TMR3            equ	4018	;# 
   346   000FB2                     TMR3L           equ	4018	;# 
   347   000FB3                     TMR3H           equ	4019	;# 
   348   000FB4                     CMCON           equ	4020	;# 
   349   000FB5                     CVRCON          equ	4021	;# 
   350   000FB6                     ECCP1AS         equ	4022	;# 
   351   000FB6                     CCP1AS          equ	4022	;# 
   352   000FB7                     ECCP1DEL        equ	4023	;# 
   353   000FB7                     CCP1DEL         equ	4023	;# 
   354   000FB8                     BAUDCON         equ	4024	;# 
   355   000FB8                     BAUDCTL         equ	4024	;# 
   356   000FBA                     CCP2CON         equ	4026	;# 
   357   000FBB                     CCPR2           equ	4027	;# 
   358   000FBB                     CCPR2L          equ	4027	;# 
   359   000FBC                     CCPR2H          equ	4028	;# 
   360   000FBD                     CCP1CON         equ	4029	;# 
   361   000FBD                     ECCP1CON        equ	4029	;# 
   362   000FBE                     CCPR1           equ	4030	;# 
   363   000FBE                     CCPR1L          equ	4030	;# 
   364   000FBF                     CCPR1H          equ	4031	;# 
   365   000FC0                     ADCON2          equ	4032	;# 
   366   000FC1                     ADCON1          equ	4033	;# 
   367   000FC2                     ADCON0          equ	4034	;# 
   368   000FC3                     ADRES           equ	4035	;# 
   369   000FC3                     ADRESL          equ	4035	;# 
   370   000FC4                     ADRESH          equ	4036	;# 
   371   000FC5                     SSPCON2         equ	4037	;# 
   372   000FC6                     SSPCON1         equ	4038	;# 
   373   000FC7                     SSPSTAT         equ	4039	;# 
   374   000FC8                     SSPADD          equ	4040	;# 
   375   000FC9                     SSPBUF          equ	4041	;# 
   376   000FCA                     T2CON           equ	4042	;# 
   377   000FCB                     PR2             equ	4043	;# 
   378   000FCB                     MEMCON          equ	4043	;# 
   379   000FCC                     TMR2            equ	4044	;# 
   380   000FCD                     T1CON           equ	4045	;# 
   381   000FCE                     TMR1            equ	4046	;# 
   382   000FCE                     TMR1L           equ	4046	;# 
   383   000FCF                     TMR1H           equ	4047	;# 
   384   000FD0                     RCON            equ	4048	;# 
   385   000FD1                     WDTCON          equ	4049	;# 
   386   000FD2                     HLVDCON         equ	4050	;# 
   387   000FD2                     LVDCON          equ	4050	;# 
   388   000FD3                     OSCCON          equ	4051	;# 
   389   000FD5                     T0CON           equ	4053	;# 
   390   000FD6                     TMR0            equ	4054	;# 
   391   000FD6                     TMR0L           equ	4054	;# 
   392   000FD7                     TMR0H           equ	4055	;# 
   393   000FD8                     STATUS          equ	4056	;# 
   394   000FD9                     FSR2            equ	4057	;# 
   395   000FD9                     FSR2L           equ	4057	;# 
   396   000FDA                     FSR2H           equ	4058	;# 
   397   000FDB                     PLUSW2          equ	4059	;# 
   398   000FDC                     PREINC2         equ	4060	;# 
   399   000FDD                     POSTDEC2        equ	4061	;# 
   400   000FDE                     POSTINC2        equ	4062	;# 
   401   000FDF                     INDF2           equ	4063	;# 
   402   000FE0                     BSR             equ	4064	;# 
   403   000FE1                     FSR1            equ	4065	;# 
   404   000FE1                     FSR1L           equ	4065	;# 
   405   000FE2                     FSR1H           equ	4066	;# 
   406   000FE3                     PLUSW1          equ	4067	;# 
   407   000FE4                     PREINC1         equ	4068	;# 
   408   000FE5                     POSTDEC1        equ	4069	;# 
   409   000FE6                     POSTINC1        equ	4070	;# 
   410   000FE7                     INDF1           equ	4071	;# 
   411   000FE8                     WREG            equ	4072	;# 
   412   000FE9                     FSR0            equ	4073	;# 
   413   000FE9                     FSR0L           equ	4073	;# 
   414   000FEA                     FSR0H           equ	4074	;# 
   415   000FEB                     PLUSW0          equ	4075	;# 
   416   000FEC                     PREINC0         equ	4076	;# 
   417   000FED                     POSTDEC0        equ	4077	;# 
   418   000FEE                     POSTINC0        equ	4078	;# 
   419   000FEF                     INDF0           equ	4079	;# 
   420   000FF0                     INTCON3         equ	4080	;# 
   421   000FF1                     INTCON2         equ	4081	;# 
   422   000FF2                     INTCON          equ	4082	;# 
   423   000FF3                     PROD            equ	4083	;# 
   424   000FF3                     PRODL           equ	4083	;# 
   425   000FF4                     PRODH           equ	4084	;# 
   426   000FF5                     TABLAT          equ	4085	;# 
   427   000FF6                     TBLPTR          equ	4086	;# 
   428   000FF6                     TBLPTRL         equ	4086	;# 
   429   000FF7                     TBLPTRH         equ	4087	;# 
   430   000FF8                     TBLPTRU         equ	4088	;# 
   431   000FF9                     PCLAT           equ	4089	;# 
   432   000FF9                     PC              equ	4089	;# 
   433   000FF9                     PCL             equ	4089	;# 
   434   000FFA                     PCLATH          equ	4090	;# 
   435   000FFB                     PCLATU          equ	4091	;# 
   436   000FFC                     STKPTR          equ	4092	;# 
   437   000FFD                     TOS             equ	4093	;# 
   438   000FFD                     TOSL            equ	4093	;# 
   439   000FFE                     TOSH            equ	4094	;# 
   440   000FFF                     TOSU            equ	4095	;# 
   441   000F62                     SPPDATA         equ	3938	;# 
   442   000F63                     SPPCFG          equ	3939	;# 
   443   000F64                     SPPEPS          equ	3940	;# 
   444   000F65                     SPPCON          equ	3941	;# 
   445   000F66                     UFRM            equ	3942	;# 
   446   000F66                     UFRML           equ	3942	;# 
   447   000F67                     UFRMH           equ	3943	;# 
   448   000F68                     UIR             equ	3944	;# 
   449   000F69                     UIE             equ	3945	;# 
   450   000F6A                     UEIR            equ	3946	;# 
   451   000F6B                     UEIE            equ	3947	;# 
   452   000F6C                     USTAT           equ	3948	;# 
   453   000F6D                     UCON            equ	3949	;# 
   454   000F6E                     UADDR           equ	3950	;# 
   455   000F6F                     UCFG            equ	3951	;# 
   456   000F70                     UEP0            equ	3952	;# 
   457   000F71                     UEP1            equ	3953	;# 
   458   000F72                     UEP2            equ	3954	;# 
   459   000F73                     UEP3            equ	3955	;# 
   460   000F74                     UEP4            equ	3956	;# 
   461   000F75                     UEP5            equ	3957	;# 
   462   000F76                     UEP6            equ	3958	;# 
   463   000F77                     UEP7            equ	3959	;# 
   464   000F78                     UEP8            equ	3960	;# 
   465   000F79                     UEP9            equ	3961	;# 
   466   000F7A                     UEP10           equ	3962	;# 
   467   000F7B                     UEP11           equ	3963	;# 
   468   000F7C                     UEP12           equ	3964	;# 
   469   000F7D                     UEP13           equ	3965	;# 
   470   000F7E                     UEP14           equ	3966	;# 
   471   000F7F                     UEP15           equ	3967	;# 
   472   000F80                     PORTA           equ	3968	;# 
   473   000F81                     PORTB           equ	3969	;# 
   474   000F82                     PORTC           equ	3970	;# 
   475   000F83                     PORTD           equ	3971	;# 
   476   000F84                     PORTE           equ	3972	;# 
   477   000F89                     LATA            equ	3977	;# 
   478   000F8A                     LATB            equ	3978	;# 
   479   000F8B                     LATC            equ	3979	;# 
   480   000F8C                     LATD            equ	3980	;# 
   481   000F8D                     LATE            equ	3981	;# 
   482   000F92                     TRISA           equ	3986	;# 
   483   000F92                     DDRA            equ	3986	;# 
   484   000F93                     TRISB           equ	3987	;# 
   485   000F93                     DDRB            equ	3987	;# 
   486   000F94                     TRISC           equ	3988	;# 
   487   000F94                     DDRC            equ	3988	;# 
   488   000F95                     TRISD           equ	3989	;# 
   489   000F95                     DDRD            equ	3989	;# 
   490   000F96                     TRISE           equ	3990	;# 
   491   000F96                     DDRE            equ	3990	;# 
   492   000F9B                     OSCTUNE         equ	3995	;# 
   493   000F9D                     PIE1            equ	3997	;# 
   494   000F9E                     PIR1            equ	3998	;# 
   495   000F9F                     IPR1            equ	3999	;# 
   496   000FA0                     PIE2            equ	4000	;# 
   497   000FA1                     PIR2            equ	4001	;# 
   498   000FA2                     IPR2            equ	4002	;# 
   499   000FA6                     EECON1          equ	4006	;# 
   500   000FA7                     EECON2          equ	4007	;# 
   501   000FA8                     EEDATA          equ	4008	;# 
   502   000FA9                     EEADR           equ	4009	;# 
   503   000FAB                     RCSTA           equ	4011	;# 
   504   000FAB                     RCSTA1          equ	4011	;# 
   505   000FAC                     TXSTA           equ	4012	;# 
   506   000FAC                     TXSTA1          equ	4012	;# 
   507   000FAD                     TXREG           equ	4013	;# 
   508   000FAD                     TXREG1          equ	4013	;# 
   509   000FAE                     RCREG           equ	4014	;# 
   510   000FAE                     RCREG1          equ	4014	;# 
   511   000FAF                     SPBRG           equ	4015	;# 
   512   000FAF                     SPBRG1          equ	4015	;# 
   513   000FB0                     SPBRGH          equ	4016	;# 
   514   000FB1                     T3CON           equ	4017	;# 
   515   000FB2                     TMR3            equ	4018	;# 
   516   000FB2                     TMR3L           equ	4018	;# 
   517   000FB3                     TMR3H           equ	4019	;# 
   518   000FB4                     CMCON           equ	4020	;# 
   519   000FB5                     CVRCON          equ	4021	;# 
   520   000FB6                     ECCP1AS         equ	4022	;# 
   521   000FB6                     CCP1AS          equ	4022	;# 
   522   000FB7                     ECCP1DEL        equ	4023	;# 
   523   000FB7                     CCP1DEL         equ	4023	;# 
   524   000FB8                     BAUDCON         equ	4024	;# 
   525   000FB8                     BAUDCTL         equ	4024	;# 
   526   000FBA                     CCP2CON         equ	4026	;# 
   527   000FBB                     CCPR2           equ	4027	;# 
   528   000FBB                     CCPR2L          equ	4027	;# 
   529   000FBC                     CCPR2H          equ	4028	;# 
   530   000FBD                     CCP1CON         equ	4029	;# 
   531   000FBD                     ECCP1CON        equ	4029	;# 
   532   000FBE                     CCPR1           equ	4030	;# 
   533   000FBE                     CCPR1L          equ	4030	;# 
   534   000FBF                     CCPR1H          equ	4031	;# 
   535   000FC0                     ADCON2          equ	4032	;# 
   536   000FC1                     ADCON1          equ	4033	;# 
   537   000FC2                     ADCON0          equ	4034	;# 
   538   000FC3                     ADRES           equ	4035	;# 
   539   000FC3                     ADRESL          equ	4035	;# 
   540   000FC4                     ADRESH          equ	4036	;# 
   541   000FC5                     SSPCON2         equ	4037	;# 
   542   000FC6                     SSPCON1         equ	4038	;# 
   543   000FC7                     SSPSTAT         equ	4039	;# 
   544   000FC8                     SSPADD          equ	4040	;# 
   545   000FC9                     SSPBUF          equ	4041	;# 
   546   000FCA                     T2CON           equ	4042	;# 
   547   000FCB                     PR2             equ	4043	;# 
   548   000FCB                     MEMCON          equ	4043	;# 
   549   000FCC                     TMR2            equ	4044	;# 
   550   000FCD                     T1CON           equ	4045	;# 
   551   000FCE                     TMR1            equ	4046	;# 
   552   000FCE                     TMR1L           equ	4046	;# 
   553   000FCF                     TMR1H           equ	4047	;# 
   554   000FD0                     RCON            equ	4048	;# 
   555   000FD1                     WDTCON          equ	4049	;# 
   556   000FD2                     HLVDCON         equ	4050	;# 
   557   000FD2                     LVDCON          equ	4050	;# 
   558   000FD3                     OSCCON          equ	4051	;# 
   559   000FD5                     T0CON           equ	4053	;# 
   560   000FD6                     TMR0            equ	4054	;# 
   561   000FD6                     TMR0L           equ	4054	;# 
   562   000FD7                     TMR0H           equ	4055	;# 
   563   000FD8                     STATUS          equ	4056	;# 
   564   000FD9                     FSR2            equ	4057	;# 
   565   000FD9                     FSR2L           equ	4057	;# 
   566   000FDA                     FSR2H           equ	4058	;# 
   567   000FDB                     PLUSW2          equ	4059	;# 
   568   000FDC                     PREINC2         equ	4060	;# 
   569   000FDD                     POSTDEC2        equ	4061	;# 
   570   000FDE                     POSTINC2        equ	4062	;# 
   571   000FDF                     INDF2           equ	4063	;# 
   572   000FE0                     BSR             equ	4064	;# 
   573   000FE1                     FSR1            equ	4065	;# 
   574   000FE1                     FSR1L           equ	4065	;# 
   575   000FE2                     FSR1H           equ	4066	;# 
   576   000FE3                     PLUSW1          equ	4067	;# 
   577   000FE4                     PREINC1         equ	4068	;# 
   578   000FE5                     POSTDEC1        equ	4069	;# 
   579   000FE6                     POSTINC1        equ	4070	;# 
   580   000FE7                     INDF1           equ	4071	;# 
   581   000FE8                     WREG            equ	4072	;# 
   582   000FE9                     FSR0            equ	4073	;# 
   583   000FE9                     FSR0L           equ	4073	;# 
   584   000FEA                     FSR0H           equ	4074	;# 
   585   000FEB                     PLUSW0          equ	4075	;# 
   586   000FEC                     PREINC0         equ	4076	;# 
   587   000FED                     POSTDEC0        equ	4077	;# 
   588   000FEE                     POSTINC0        equ	4078	;# 
   589   000FEF                     INDF0           equ	4079	;# 
   590   000FF0                     INTCON3         equ	4080	;# 
   591   000FF1                     INTCON2         equ	4081	;# 
   592   000FF2                     INTCON          equ	4082	;# 
   593   000FF3                     PROD            equ	4083	;# 
   594   000FF3                     PRODL           equ	4083	;# 
   595   000FF4                     PRODH           equ	4084	;# 
   596   000FF5                     TABLAT          equ	4085	;# 
   597   000FF6                     TBLPTR          equ	4086	;# 
   598   000FF6                     TBLPTRL         equ	4086	;# 
   599   000FF7                     TBLPTRH         equ	4087	;# 
   600   000FF8                     TBLPTRU         equ	4088	;# 
   601   000FF9                     PCLAT           equ	4089	;# 
   602   000FF9                     PC              equ	4089	;# 
   603   000FF9                     PCL             equ	4089	;# 
   604   000FFA                     PCLATH          equ	4090	;# 
   605   000FFB                     PCLATU          equ	4091	;# 
   606   000FFC                     STKPTR          equ	4092	;# 
   607   000FFD                     TOS             equ	4093	;# 
   608   000FFD                     TOSL            equ	4093	;# 
   609   000FFE                     TOSH            equ	4094	;# 
   610   000FFF                     TOSU            equ	4095	;# 
   611   000F62                     SPPDATA         equ	3938	;# 
   612   000F63                     SPPCFG          equ	3939	;# 
   613   000F64                     SPPEPS          equ	3940	;# 
   614   000F65                     SPPCON          equ	3941	;# 
   615   000F66                     UFRM            equ	3942	;# 
   616   000F66                     UFRML           equ	3942	;# 
   617   000F67                     UFRMH           equ	3943	;# 
   618   000F68                     UIR             equ	3944	;# 
   619   000F69                     UIE             equ	3945	;# 
   620   000F6A                     UEIR            equ	3946	;# 
   621   000F6B                     UEIE            equ	3947	;# 
   622   000F6C                     USTAT           equ	3948	;# 
   623   000F6D                     UCON            equ	3949	;# 
   624   000F6E                     UADDR           equ	3950	;# 
   625   000F6F                     UCFG            equ	3951	;# 
   626   000F70                     UEP0            equ	3952	;# 
   627   000F71                     UEP1            equ	3953	;# 
   628   000F72                     UEP2            equ	3954	;# 
   629   000F73                     UEP3            equ	3955	;# 
   630   000F74                     UEP4            equ	3956	;# 
   631   000F75                     UEP5            equ	3957	;# 
   632   000F76                     UEP6            equ	3958	;# 
   633   000F77                     UEP7            equ	3959	;# 
   634   000F78                     UEP8            equ	3960	;# 
   635   000F79                     UEP9            equ	3961	;# 
   636   000F7A                     UEP10           equ	3962	;# 
   637   000F7B                     UEP11           equ	3963	;# 
   638   000F7C                     UEP12           equ	3964	;# 
   639   000F7D                     UEP13           equ	3965	;# 
   640   000F7E                     UEP14           equ	3966	;# 
   641   000F7F                     UEP15           equ	3967	;# 
   642   000F80                     PORTA           equ	3968	;# 
   643   000F81                     PORTB           equ	3969	;# 
   644   000F82                     PORTC           equ	3970	;# 
   645   000F83                     PORTD           equ	3971	;# 
   646   000F84                     PORTE           equ	3972	;# 
   647   000F89                     LATA            equ	3977	;# 
   648   000F8A                     LATB            equ	3978	;# 
   649   000F8B                     LATC            equ	3979	;# 
   650   000F8C                     LATD            equ	3980	;# 
   651   000F8D                     LATE            equ	3981	;# 
   652   000F92                     TRISA           equ	3986	;# 
   653   000F92                     DDRA            equ	3986	;# 
   654   000F93                     TRISB           equ	3987	;# 
   655   000F93                     DDRB            equ	3987	;# 
   656   000F94                     TRISC           equ	3988	;# 
   657   000F94                     DDRC            equ	3988	;# 
   658   000F95                     TRISD           equ	3989	;# 
   659   000F95                     DDRD            equ	3989	;# 
   660   000F96                     TRISE           equ	3990	;# 
   661   000F96                     DDRE            equ	3990	;# 
   662   000F9B                     OSCTUNE         equ	3995	;# 
   663   000F9D                     PIE1            equ	3997	;# 
   664   000F9E                     PIR1            equ	3998	;# 
   665   000F9F                     IPR1            equ	3999	;# 
   666   000FA0                     PIE2            equ	4000	;# 
   667   000FA1                     PIR2            equ	4001	;# 
   668   000FA2                     IPR2            equ	4002	;# 
   669   000FA6                     EECON1          equ	4006	;# 
   670   000FA7                     EECON2          equ	4007	;# 
   671   000FA8                     EEDATA          equ	4008	;# 
   672   000FA9                     EEADR           equ	4009	;# 
   673   000FAB                     RCSTA           equ	4011	;# 
   674   000FAB                     RCSTA1          equ	4011	;# 
   675   000FAC                     TXSTA           equ	4012	;# 
   676   000FAC                     TXSTA1          equ	4012	;# 
   677   000FAD                     TXREG           equ	4013	;# 
   678   000FAD                     TXREG1          equ	4013	;# 
   679   000FAE                     RCREG           equ	4014	;# 
   680   000FAE                     RCREG1          equ	4014	;# 
   681   000FAF                     SPBRG           equ	4015	;# 
   682   000FAF                     SPBRG1          equ	4015	;# 
   683   000FB0                     SPBRGH          equ	4016	;# 
   684   000FB1                     T3CON           equ	4017	;# 
   685   000FB2                     TMR3            equ	4018	;# 
   686   000FB2                     TMR3L           equ	4018	;# 
   687   000FB3                     TMR3H           equ	4019	;# 
   688   000FB4                     CMCON           equ	4020	;# 
   689   000FB5                     CVRCON          equ	4021	;# 
   690   000FB6                     ECCP1AS         equ	4022	;# 
   691   000FB6                     CCP1AS          equ	4022	;# 
   692   000FB7                     ECCP1DEL        equ	4023	;# 
   693   000FB7                     CCP1DEL         equ	4023	;# 
   694   000FB8                     BAUDCON         equ	4024	;# 
   695   000FB8                     BAUDCTL         equ	4024	;# 
   696   000FBA                     CCP2CON         equ	4026	;# 
   697   000FBB                     CCPR2           equ	4027	;# 
   698   000FBB                     CCPR2L          equ	4027	;# 
   699   000FBC                     CCPR2H          equ	4028	;# 
   700   000FBD                     CCP1CON         equ	4029	;# 
   701   000FBD                     ECCP1CON        equ	4029	;# 
   702   000FBE                     CCPR1           equ	4030	;# 
   703   000FBE                     CCPR1L          equ	4030	;# 
   704   000FBF                     CCPR1H          equ	4031	;# 
   705   000FC0                     ADCON2          equ	4032	;# 
   706   000FC1                     ADCON1          equ	4033	;# 
   707   000FC2                     ADCON0          equ	4034	;# 
   708   000FC3                     ADRES           equ	4035	;# 
   709   000FC3                     ADRESL          equ	4035	;# 
   710   000FC4                     ADRESH          equ	4036	;# 
   711   000FC5                     SSPCON2         equ	4037	;# 
   712   000FC6                     SSPCON1         equ	4038	;# 
   713   000FC7                     SSPSTAT         equ	4039	;# 
   714   000FC8                     SSPADD          equ	4040	;# 
   715   000FC9                     SSPBUF          equ	4041	;# 
   716   000FCA                     T2CON           equ	4042	;# 
   717   000FCB                     PR2             equ	4043	;# 
   718   000FCB                     MEMCON          equ	4043	;# 
   719   000FCC                     TMR2            equ	4044	;# 
   720   000FCD                     T1CON           equ	4045	;# 
   721   000FCE                     TMR1            equ	4046	;# 
   722   000FCE                     TMR1L           equ	4046	;# 
   723   000FCF                     TMR1H           equ	4047	;# 
   724   000FD0                     RCON            equ	4048	;# 
   725   000FD1                     WDTCON          equ	4049	;# 
   726   000FD2                     HLVDCON         equ	4050	;# 
   727   000FD2                     LVDCON          equ	4050	;# 
   728   000FD3                     OSCCON          equ	4051	;# 
   729   000FD5                     T0CON           equ	4053	;# 
   730   000FD6                     TMR0            equ	4054	;# 
   731   000FD6                     TMR0L           equ	4054	;# 
   732   000FD7                     TMR0H           equ	4055	;# 
   733   000FD8                     STATUS          equ	4056	;# 
   734   000FD9                     FSR2            equ	4057	;# 
   735   000FD9                     FSR2L           equ	4057	;# 
   736   000FDA                     FSR2H           equ	4058	;# 
   737   000FDB                     PLUSW2          equ	4059	;# 
   738   000FDC                     PREINC2         equ	4060	;# 
   739   000FDD                     POSTDEC2        equ	4061	;# 
   740   000FDE                     POSTINC2        equ	4062	;# 
   741   000FDF                     INDF2           equ	4063	;# 
   742   000FE0                     BSR             equ	4064	;# 
   743   000FE1                     FSR1            equ	4065	;# 
   744   000FE1                     FSR1L           equ	4065	;# 
   745   000FE2                     FSR1H           equ	4066	;# 
   746   000FE3                     PLUSW1          equ	4067	;# 
   747   000FE4                     PREINC1         equ	4068	;# 
   748   000FE5                     POSTDEC1        equ	4069	;# 
   749   000FE6                     POSTINC1        equ	4070	;# 
   750   000FE7                     INDF1           equ	4071	;# 
   751   000FE8                     WREG            equ	4072	;# 
   752   000FE9                     FSR0            equ	4073	;# 
   753   000FE9                     FSR0L           equ	4073	;# 
   754   000FEA                     FSR0H           equ	4074	;# 
   755   000FEB                     PLUSW0          equ	4075	;# 
   756   000FEC                     PREINC0         equ	4076	;# 
   757   000FED                     POSTDEC0        equ	4077	;# 
   758   000FEE                     POSTINC0        equ	4078	;# 
   759   000FEF                     INDF0           equ	4079	;# 
   760   000FF0                     INTCON3         equ	4080	;# 
   761   000FF1                     INTCON2         equ	4081	;# 
   762   000FF2                     INTCON          equ	4082	;# 
   763   000FF3                     PROD            equ	4083	;# 
   764   000FF3                     PRODL           equ	4083	;# 
   765   000FF4                     PRODH           equ	4084	;# 
   766   000FF5                     TABLAT          equ	4085	;# 
   767   000FF6                     TBLPTR          equ	4086	;# 
   768   000FF6                     TBLPTRL         equ	4086	;# 
   769   000FF7                     TBLPTRH         equ	4087	;# 
   770   000FF8                     TBLPTRU         equ	4088	;# 
   771   000FF9                     PCLAT           equ	4089	;# 
   772   000FF9                     PC              equ	4089	;# 
   773   000FF9                     PCL             equ	4089	;# 
   774   000FFA                     PCLATH          equ	4090	;# 
   775   000FFB                     PCLATU          equ	4091	;# 
   776   000FFC                     STKPTR          equ	4092	;# 
   777   000FFD                     TOS             equ	4093	;# 
   778   000FFD                     TOSL            equ	4093	;# 
   779   000FFE                     TOSH            equ	4094	;# 
   780   000FFF                     TOSU            equ	4095	;# 
   781   000FC9                     _SSPBUF         set	4041
   782   000FC7                     _SSPSTATbits    set	4039
   783   000FC6                     _SSPCON1bits    set	4038
   784   000F94                     _TRISCbits      set	3988
   785   000F92                     _TRISAbits      set	3986
   786   000FC1                     _ADCON1         set	4033
   787   000F89                     _LATAbits       set	3977
   788   000F8A                     _LATBbits       set	3978
   789   000F93                     _TRISBbits      set	3987
   790   000F8C                     _LATD           set	3980
   791   000F95                     _TRISD          set	3989
   792                           
   793                           	psect	smallconst
   794   000800                     __psmallconst:
   795                           	callstack 0
   796   000800  00                 	db	0
   797   000801                     STR_2:
   798   000801  43                 	db	67	;'C'
   799   000802  4F                 	db	79	;'O'
   800   000803  4E                 	db	78	;'N'
   801   000804  54                 	db	84	;'T'
   802   000805  52                 	db	82	;'R'
   803   000806  4F                 	db	79	;'O'
   804   000807  4C                 	db	76	;'L'
   805   000808  4C                 	db	76	;'L'
   806   000809  45                 	db	69	;'E'
   807   00080A  52                 	db	82	;'R'
   808   00080B  20                 	db	32
   809   00080C  3C                 	db	60	;'<'
   810   00080D  3C                 	db	60	;'<'
   811   00080E  00                 	db	0
   812   00080F                     STR_1:
   813   00080F  3E                 	db	62	;'>'
   814   000810  3E                 	db	62	;'>'
   815   000811  20                 	db	32
   816   000812  52                 	db	82	;'R'
   817   000813  4F                 	db	79	;'O'
   818   000814  42                 	db	66	;'B'
   819   000815  4F                 	db	79	;'O'
   820   000816  54                 	db	84	;'T'
   821   000817  20                 	db	32
   822   000818  41                 	db	65	;'A'
   823   000819  52                 	db	82	;'R'
   824   00081A  4D                 	db	77	;'M'
   825   00081B  00                 	db	0
   826   00081C  00                 	db	0	; dummy byte at the end
   827   000002                     __activetblptr  equ	2
   828                           
   829                           ; #config settings
   830                           
   831                           	psect	cinit
   832   000C24                     __pcinit:
   833                           	callstack 0
   834   000C24                     start_initialization:
   835                           	callstack 0
   836   000C24                     __initialization:
   837                           	callstack 0
   838                           
   839                           ; Clear objects allocated to COMRAM (55 bytes)
   840   000C24  EE00  F001         	lfsr	0,__pbssCOMRAM
   841   000C28  0E37               	movlw	55
   842   000C2A                     clear_0:
   843   000C2A  6AEE               	clrf	postinc0,c
   844   000C2C  06E8               	decf	wreg,f,c
   845   000C2E  E1FD               	bnz	clear_0
   846   000C30                     end_of_initialization:
   847                           	callstack 0
   848   000C30                     __end_of__initialization:
   849                           	callstack 0
   850   000C30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   851   000C32  6EF8               	movwf	tblptru,c
   852   000C34  0100               	movlb	0
   853   000C36  EF0F  F004         	goto	_main	;jump to C main() function
   854                           
   855                           	psect	bssCOMRAM
   856   000001                     __pbssCOMRAM:
   857                           	callstack 0
   858   000001                     	ds	32
   859   000021                     _width:
   860                           	callstack 0
   861   000021                     	ds	2
   862   000023                     _prec:
   863                           	callstack 0
   864   000023                     	ds	2
   865   000025                     _data:
   866                           	callstack 0
   867   000025                     	ds	2
   868   000027                     _flags:
   869                           	callstack 0
   870   000027                     	ds	1
   871   000028                     _DATA_LCD:
   872                           	callstack 0
   873   000028                     	ds	16
   874                           
   875                           	psect	cstackCOMRAM
   876   000038                     __pcstackCOMRAM:
   877                           	callstack 0
   878   000038                     writeChar_LCD@dato_LCD:
   879                           	callstack 0
   880   000038                     set_Cursor_LCD@y:
   881                           	callstack 0
   882   000038                     SPI_Init_Master@modo:
   883                           	callstack 0
   884   000038                     SPI_Tx@dato:
   885                           	callstack 0
   886   000038                     fputc@c:
   887                           	callstack 0
   888   000038                     ??_clear_LCD:
   889   000038                     
   890                           ; 1 bytes @ 0x0
   891   000038                     	ds	1
   892   000039                     writeString_LCD@dato_LCD:
   893                           	callstack 0
   894   000039                     SPI_Init_Master@smp:
   895                           	callstack 0
   896   000039                     ??_set_Cursor_LCD:
   897                           
   898                           ; 1 bytes @ 0x1
   899   000039                     	ds	1
   900   00003A                     set_Cursor_LCD@x:
   901                           	callstack 0
   902   00003A                     SPI_Init_Master@reloj:
   903                           	callstack 0
   904   00003A                     fputc@fp:
   905                           	callstack 0
   906   00003A                     writeString_LCD@i:
   907                           	callstack 0
   908   00003A                     
   909                           ; 1 bytes @ 0x2
   910   00003A                     	ds	1
   911   00003B                     ??_fputc:
   912   00003B                     ??_init_LCD:
   913                           
   914                           ; 1 bytes @ 0x3
   915   00003B                     	ds	5
   916   000040                     vfpfcnvrt@fp:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x8
   920   000040                     	ds	1
   921   000041                     vfpfcnvrt@fmt:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x9
   925   000041                     	ds	1
   926   000042                     vfpfcnvrt@ap:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0xA
   930   000042                     	ds	1
   931   000043                     ?_vfprintf:
   932                           	callstack 0
   933   000043                     vfprintf@fp:
   934                           	callstack 0
   935   000043                     
   936                           ; 1 bytes @ 0xB
   937   000043                     	ds	1
   938   000044                     vfprintf@fmt:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0xC
   942   000044                     	ds	1
   943   000045                     vfprintf@ap:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0xD
   947   000045                     	ds	1
   948   000046                     vfprintf@cfmt:
   949                           	callstack 0
   950   000046                     
   951                           ; 1 bytes @ 0xE
   952   000046                     	ds	1
   953   000047                     ?_sprintf:
   954                           	callstack 0
   955   000047                     sprintf@s:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0xF
   959   000047                     	ds	1
   960   000048                     sprintf@fmt:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x10
   964   000048                     	ds	1
   965   000049                     sprintf@ap:
   966                           	callstack 0
   967   000049                     
   968                           ; 1 bytes @ 0x11
   969   000049                     	ds	1
   970   00004A                     sprintf@f:
   971                           	callstack 0
   972                           
   973                           ; 11 bytes @ 0x12
   974   00004A                     	ds	11
   975   000055                     ??_main:
   976                           
   977                           ; 1 bytes @ 0x1D
   978   000055                     	ds	2
   979                           
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 23 in file "tx_main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         0       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        2 bytes
  1004 ;; Hardware stack levels required when called: 5
  1005 ;; This function calls:
  1006 ;;		_SPI_Init_Master
  1007 ;;		_SPI_Tx
  1008 ;;		_clear_LCD
  1009 ;;		_init_LCD
  1010 ;;		_set_Cursor_LCD
  1011 ;;		_sprintf
  1012 ;;		_writeString_LCD
  1013 ;; This function is called by:
  1014 ;;		Startup code after reset
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text0
  1019   00081E                     __ptext0:
  1020                           	callstack 0
  1021   00081E                     _main:
  1022                           	callstack 26
  1023   00081E                     
  1024                           ;tx_main.c: 25:     init_LCD();
  1025   00081E  EC02  F005         	call	_init_LCD	;wreg free
  1026   000822                     
  1027                           ;tx_main.c: 27:         sprintf(DATA_LCD,">> ROBOT ARM");
  1028   000822  0E28               	movlw	low _DATA_LCD
  1029   000824  6E47               	movwf	sprintf@s^0,c
  1030   000826  0E0F               	movlw	low STR_1
  1031   000828  6E48               	movwf	sprintf@fmt^0,c
  1032   00082A  ECEA  F005         	call	_sprintf	;wreg free
  1033   00082E                     
  1034                           ;tx_main.c: 28:         set_Cursor_LCD(1,2);
  1035   00082E  0E02               	movlw	2
  1036   000830  6E38               	movwf	set_Cursor_LCD@y^0,c
  1037   000832  0E01               	movlw	1
  1038   000834  EC3E  F005         	call	_set_Cursor_LCD
  1039   000838                     
  1040                           ;tx_main.c: 29:         writeString_LCD(DATA_LCD);
  1041   000838  0E28               	movlw	low _DATA_LCD
  1042   00083A  6E39               	movwf	writeString_LCD@dato_LCD^0,c
  1043   00083C  ECCE  F005         	call	_writeString_LCD	;wreg free
  1044   000840                     
  1045                           ;tx_main.c: 30:         sprintf(DATA_LCD,"CONTROLLER <<");
  1046   000840  0E28               	movlw	low _DATA_LCD
  1047   000842  6E47               	movwf	sprintf@s^0,c
  1048   000844  0E01               	movlw	low STR_2
  1049   000846  6E48               	movwf	sprintf@fmt^0,c
  1050   000848  ECEA  F005         	call	_sprintf	;wreg free
  1051   00084C                     
  1052                           ;tx_main.c: 31:         set_Cursor_LCD(2,1);
  1053   00084C  0E01               	movlw	1
  1054   00084E  6E38               	movwf	set_Cursor_LCD@y^0,c
  1055   000850  0E02               	movlw	2
  1056   000852  EC3E  F005         	call	_set_Cursor_LCD
  1057   000856                     
  1058                           ;tx_main.c: 32:         writeString_LCD(DATA_LCD);
  1059   000856  0E28               	movlw	low _DATA_LCD
  1060   000858  6E39               	movwf	writeString_LCD@dato_LCD^0,c
  1061   00085A  ECCE  F005         	call	_writeString_LCD	;wreg free
  1062   00085E                     
  1063                           ;tx_main.c: 33:         _delay((unsigned long)((1000)*(48000000UL/4000.0)));
  1064   00085E  0E3D               	movlw	61
  1065   000860  6E56               	movwf	(??_main+1)^0,c
  1066   000862  0EE1               	movlw	225
  1067   000864  6E55               	movwf	??_main^0,c
  1068   000866  0E40               	movlw	64
  1069   000868                     u297:
  1070   000868  2EE8               	decfsz	wreg,f,c
  1071   00086A  D7FE               	bra	u297
  1072   00086C  2E55               	decfsz	??_main^0,f,c
  1073   00086E  D7FC               	bra	u297
  1074   000870  2E56               	decfsz	(??_main+1)^0,f,c
  1075   000872  D7FA               	bra	u297
  1076   000874                     
  1077                           ;tx_main.c: 34:         clear_LCD();
  1078   000874  EC04  F006         	call	_clear_LCD	;wreg free
  1079   000878                     
  1080                           ;tx_main.c: 37:     SPI_Init_Master(0, '1', 0);
  1081   000878  0E31               	movlw	49
  1082   00087A  6E38               	movwf	SPI_Init_Master@modo^0,c
  1083   00087C  0E00               	movlw	0
  1084   00087E  6E39               	movwf	SPI_Init_Master@smp^0,c
  1085   000880  0E00               	movlw	0
  1086   000882  ECBD  F004         	call	_SPI_Init_Master
  1087   000886                     
  1088                           ;tx_main.c: 38:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
  1089   000886  0E07               	movlw	7
  1090   000888  6E56               	movwf	(??_main+1)^0,c
  1091   00088A  0E17               	movlw	23
  1092   00088C  6E55               	movwf	??_main^0,c
  1093   00088E  0E6A               	movlw	106
  1094   000890                     u307:
  1095   000890  2EE8               	decfsz	wreg,f,c
  1096   000892  D7FE               	bra	u307
  1097   000894  2E55               	decfsz	??_main^0,f,c
  1098   000896  D7FC               	bra	u307
  1099   000898  2E56               	decfsz	(??_main+1)^0,f,c
  1100   00089A  D7FA               	bra	u307
  1101   00089C  D000               	nop2	
  1102   00089E                     l1246:
  1103                           
  1104                           ;tx_main.c: 42:         LATAbits.LA5 = 0;
  1105   00089E  9A89               	bcf	137,5,c	;volatile
  1106   0008A0                     
  1107                           ;tx_main.c: 43:         SPI_Tx(data);
  1108   0008A0  0E00               	movlw	0
  1109   0008A2  EC27  F006         	call	_SPI_Tx
  1110   0008A6                     
  1111                           ;tx_main.c: 44:         _delay((unsigned long)((5)*(48000000UL/4000.0)));
  1112   0008A6  0E4E               	movlw	78
  1113   0008A8  6E55               	movwf	??_main^0,c
  1114   0008AA  0EEB               	movlw	235
  1115   0008AC                     u317:
  1116   0008AC  2EE8               	decfsz	wreg,f,c
  1117   0008AE  D7FE               	bra	u317
  1118   0008B0  2E55               	decfsz	??_main^0,f,c
  1119   0008B2  D7FC               	bra	u317
  1120   0008B4  0000               	nop	
  1121   0008B6                     
  1122                           ;tx_main.c: 45:         LATAbits.LA5 = 1;
  1123   0008B6  8A89               	bsf	137,5,c	;volatile
  1124   0008B8                     
  1125                           ;tx_main.c: 46:         _delay((unsigned long)((5)*(48000000UL/4000.0)));
  1126   0008B8  0E4E               	movlw	78
  1127   0008BA  6E55               	movwf	??_main^0,c
  1128   0008BC  0EEB               	movlw	235
  1129   0008BE                     u327:
  1130   0008BE  2EE8               	decfsz	wreg,f,c
  1131   0008C0  D7FE               	bra	u327
  1132   0008C2  2E55               	decfsz	??_main^0,f,c
  1133   0008C4  D7FC               	bra	u327
  1134   0008C6  0000               	nop	
  1135   0008C8  EF4F  F004         	goto	l1246
  1136   0008CC  EF00  F000         	goto	start
  1137   0008D0                     __end_of_main:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _writeString_LCD *****************
  1141 ;; Defined at:
  1142 ;;		line 62 in file "lcd_lib.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  dato_LCD        1    1[COMRAM] PTR const unsigned char 
  1145 ;;		 -> DATA_LCD(16), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  i               2    2[COMRAM] int 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1157 ;;      Params:         1       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1160 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1161 ;;Total ram usage:        3 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 1
  1164 ;; This function calls:
  1165 ;;		_writeChar_LCD
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text1
  1172   000B9C                     __ptext1:
  1173                           	callstack 0
  1174   000B9C                     _writeString_LCD:
  1175                           	callstack 29
  1176   000B9C                     
  1177                           ;lcd_lib.c: 64:     for(int i = 0; dato_LCD[i]!='\0';i++){
  1178   000B9C  0E00               	movlw	0
  1179   000B9E  6E3B               	movwf	(writeString_LCD@i+1)^0,c
  1180   000BA0  0E00               	movlw	0
  1181   000BA2  6E3A               	movwf	writeString_LCD@i^0,c
  1182   000BA4  EFDD  F005         	goto	l1182
  1183   000BA8                     l1178:
  1184                           
  1185                           ;lcd_lib.c: 65:         writeChar_LCD(dato_LCD[i]);
  1186   000BA8  5039               	movf	writeString_LCD@dato_LCD^0,w,c
  1187   000BAA  243A               	addwf	writeString_LCD@i^0,w,c
  1188   000BAC  6ED9               	movwf	fsr2l,c
  1189   000BAE  6ADA               	clrf	fsr2h,c
  1190   000BB0  50DF               	movf	indf2,w,c
  1191   000BB2  EC1D  F006         	call	_writeChar_LCD
  1192   000BB6                     
  1193                           ;lcd_lib.c: 66:     }
  1194   000BB6  4A3A               	infsnz	writeString_LCD@i^0,f,c
  1195   000BB8  2A3B               	incf	(writeString_LCD@i+1)^0,f,c
  1196   000BBA                     l1182:
  1197   000BBA  5039               	movf	writeString_LCD@dato_LCD^0,w,c
  1198   000BBC  243A               	addwf	writeString_LCD@i^0,w,c
  1199   000BBE  6ED9               	movwf	fsr2l,c
  1200   000BC0  6ADA               	clrf	fsr2h,c
  1201   000BC2  50DF               	movf	indf2,w,c
  1202   000BC4  A4D8               	btfss	status,2,c
  1203   000BC6  EFE7  F005         	goto	u231
  1204   000BCA  EFE9  F005         	goto	u230
  1205   000BCE                     u231:
  1206   000BCE  EFD4  F005         	goto	l1178
  1207   000BD2                     u230:
  1208   000BD2  0012               	return		;funcret
  1209   000BD4                     __end_of_writeString_LCD:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _writeChar_LCD *****************
  1213 ;; Defined at:
  1214 ;;		line 52 in file "lcd_lib.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  dato_LCD        1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  dato_LCD        1    0[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        1 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_writeString_LCD
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text2
  1242   000C3A                     __ptext2:
  1243                           	callstack 0
  1244   000C3A                     _writeChar_LCD:
  1245                           	callstack 29
  1246                           
  1247                           ;incstack = 0
  1248                           ;writeChar_LCD@dato_LCD stored from wreg
  1249   000C3A  6E38               	movwf	writeChar_LCD@dato_LCD^0,c
  1250   000C3C                     
  1251                           ;lcd_lib.c: 54:     LATBbits.LB3 = 1;
  1252   000C3C  868A               	bsf	138,3,c	;volatile
  1253   000C3E                     
  1254                           ;lcd_lib.c: 55:     LATD = dato_LCD;
  1255   000C3E  C038  FF8C         	movff	writeChar_LCD@dato_LCD,3980	;volatile
  1256   000C42                     
  1257                           ;lcd_lib.c: 56:     LATBbits.LB4 = 1;
  1258   000C42  888A               	bsf	138,4,c	;volatile
  1259   000C44                     
  1260                           ;lcd_lib.c: 57:     _delay((unsigned long)((50)*(48000000UL/4000000.0)));
  1261   000C44  0EC8               	movlw	200
  1262   000C46                     u337:
  1263   000C46  2EE8               	decfsz	wreg,f,c
  1264   000C48  D7FE               	bra	u337
  1265   000C4A                     
  1266                           ;lcd_lib.c: 58:     LATBbits.LB4 = 0;
  1267   000C4A  988A               	bcf	138,4,c	;volatile
  1268   000C4C  0012               	return		;funcret
  1269   000C4E                     __end_of_writeChar_LCD:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _sprintf *****************
  1273 ;; Defined at:
  1274 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  s               1   15[COMRAM] PTR unsigned char 
  1277 ;;		 -> DATA_LCD(16), 
  1278 ;;  fmt             1   16[COMRAM] PTR const unsigned char 
  1279 ;;		 -> STR_2(14), STR_1(13), 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  f              11   18[COMRAM] struct _IO_FILE
  1282 ;;  ret             2    0        int 
  1283 ;;  ap              1   17[COMRAM] PTR void [1]
  1284 ;;		 -> ?_sprintf(2), 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2   15[COMRAM] int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1294 ;;      Params:         2       0       0       0       0       0       0       0       0
  1295 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1297 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1298 ;;Total ram usage:       14 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 4
  1301 ;; This function calls:
  1302 ;;		_vfprintf
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text3
  1309   000BD4                     __ptext3:
  1310                           	callstack 0
  1311   000BD4                     _sprintf:
  1312                           	callstack 26
  1313   000BD4  0E49               	movlw	low (?_sprintf+2)
  1314   000BD6  6E49               	movwf	sprintf@ap^0,c
  1315   000BD8  C047  F04A         	movff	sprintf@s,sprintf@f
  1316   000BDC  0E00               	movlw	0
  1317   000BDE  6E4D               	movwf	(sprintf@f+3)^0,c
  1318   000BE0  0E00               	movlw	0
  1319   000BE2  6E4C               	movwf	(sprintf@f+2)^0,c
  1320   000BE4  0E00               	movlw	0
  1321   000BE6  6E54               	movwf	(sprintf@f+10)^0,c
  1322   000BE8  0E00               	movlw	0
  1323   000BEA  6E53               	movwf	(sprintf@f+9)^0,c
  1324   000BEC  0E4A               	movlw	low sprintf@f
  1325   000BEE  6E43               	movwf	vfprintf@fp^0,c
  1326   000BF0  C048  F044         	movff	sprintf@fmt,vfprintf@fmt
  1327   000BF4  0E49               	movlw	low sprintf@ap
  1328   000BF6  6E45               	movwf	vfprintf@ap^0,c
  1329   000BF8  ECAF  F005         	call	_vfprintf	;wreg free
  1330   000BFC  5047               	movf	sprintf@s^0,w,c
  1331   000BFE  244C               	addwf	(sprintf@f+2)^0,w,c
  1332   000C00  6ED9               	movwf	fsr2l,c
  1333   000C02  6ADA               	clrf	fsr2h,c
  1334   000C04  6ADF               	clrf	indf2,c
  1335   000C06  0012               	return		;funcret
  1336   000C08                     __end_of_sprintf:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _vfprintf *****************
  1340 ;; Defined at:
  1341 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  1344 ;;		 -> sprintf@f(11), 
  1345 ;;  fmt             1   12[COMRAM] PTR const unsigned char 
  1346 ;;		 -> STR_2(14), STR_1(13), 
  1347 ;;  ap              1   13[COMRAM] PTR PTR void 
  1348 ;;		 -> sprintf@ap(1), 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  cfmt            1   14[COMRAM] PTR unsigned char 
  1351 ;;		 -> STR_2(14), STR_1(13), 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  2   11[COMRAM] int 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1361 ;;      Params:         3       0       0       0       0       0       0       0       0
  1362 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1364 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1365 ;;Total ram usage:        4 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 3
  1368 ;; This function calls:
  1369 ;;		_vfpfcnvrt
  1370 ;; This function is called by:
  1371 ;;		_sprintf
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text4
  1376   000B5E                     __ptext4:
  1377                           	callstack 0
  1378   000B5E                     _vfprintf:
  1379                           	callstack 26
  1380   000B5E                     
  1381                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1382   000B5E  C044  F046         	movff	vfprintf@fmt,vfprintf@cfmt
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1385   000B62  EFBB  F005         	goto	l1142
  1386   000B66                     l1140:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1389   000B66  C043  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1390   000B6A  0E46               	movlw	low vfprintf@cfmt
  1391   000B6C  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1392   000B6E  C045  F042         	movff	vfprintf@ap,vfpfcnvrt@ap
  1393   000B72  EC7A  F005         	call	_vfpfcnvrt	;wreg free
  1394   000B76                     l1142:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1397   000B76  C046  FFF6         	movff	vfprintf@cfmt,tblptrl
  1398   000B7A                     	if	1	;There is more than 1 active tblptr byte
  1399   000B7A  0E08               	movlw	high __smallconst
  1400   000B7C  6EF7               	movwf	tblptrh,c
  1401   000B7E                     	endif
  1402   000B7E                     	if	0	;tblptru may be non-zero
  1403   000B7E                     	endif
  1404   000B7E                     	if	0	;tblptru may be non-zero
  1405   000B7E                     	endif
  1406   000B7E  0008               	tblrd		*
  1407   000B80  50F5               	movf	tablat,w,c
  1408   000B82  0900               	iorlw	0
  1409   000B84  A4D8               	btfss	status,2,c
  1410   000B86  EFC7  F005         	goto	u221
  1411   000B8A  EFC9  F005         	goto	u220
  1412   000B8E                     u221:
  1413   000B8E  EFB3  F005         	goto	l1140
  1414   000B92                     u220:
  1415   000B92                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1417   000B92  0E00               	movlw	0
  1418   000B94  6E44               	movwf	(?_vfprintf+1)^0,c
  1419   000B96  0E00               	movlw	0
  1420   000B98  6E43               	movwf	?_vfprintf^0,c
  1421   000B9A  0012               	return		;funcret
  1422   000B9C                     __end_of_vfprintf:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _vfpfcnvrt *****************
  1426 ;; Defined at:
  1427 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  1430 ;;		 -> sprintf@f(11), 
  1431 ;;  fmt             1    9[COMRAM] PTR PTR unsigned char 
  1432 ;;		 -> vfprintf@cfmt(1), 
  1433 ;;  ap              1   10[COMRAM] PTR PTR void 
  1434 ;;		 -> sprintf@ap(1), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  cp              2    0        PTR unsigned char 
  1437 ;;  done            1    0        _Bool 
  1438 ;;  c               1    0        unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         3       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1452 ;;Total ram usage:        3 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 2
  1455 ;; This function calls:
  1456 ;;		_fputc
  1457 ;; This function is called by:
  1458 ;;		_vfprintf
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text5
  1463   000AF4                     __ptext5:
  1464                           	callstack 0
  1465   000AF4                     _vfpfcnvrt:
  1466                           	callstack 26
  1467   000AF4                     
  1468                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1469   000AF4  5041               	movf	vfpfcnvrt@fmt^0,w,c
  1470   000AF6  6ED9               	movwf	fsr2l,c
  1471   000AF8  6ADA               	clrf	fsr2h,c
  1472   000AFA  CFDF FFF6          	movff	indf2,tblptrl
  1473   000AFE                     	if	1	;There is more than 1 active tblptr byte
  1474   000AFE  0E08               	movlw	high __smallconst
  1475   000B00  6EF7               	movwf	tblptrh,c
  1476   000B02                     	endif
  1477   000B02                     	if	0	;tblptru may be non-zero
  1478   000B02                     	endif
  1479   000B02                     	if	0	;tblptru may be non-zero
  1480   000B02                     	endif
  1481   000B02  0008               	tblrd		*
  1482   000B04  50F5               	movf	tablat,w,c
  1483   000B06  0A25               	xorlw	37
  1484   000B08  A4D8               	btfss	status,2,c
  1485   000B0A  EF89  F005         	goto	u211
  1486   000B0E  EF8B  F005         	goto	u210
  1487   000B12                     u211:
  1488   000B12  EF9D  F005         	goto	l1102
  1489   000B16                     u210:
  1490   000B16                     
  1491                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1492   000B16  5041               	movf	vfpfcnvrt@fmt^0,w,c
  1493   000B18  6ED9               	movwf	fsr2l,c
  1494   000B1A  6ADA               	clrf	fsr2h,c
  1495   000B1C  2ADF               	incf	indf2,f,c
  1496   000B1E                     
  1497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1498   000B1E  0E00               	movlw	0
  1499   000B20  6E22               	movwf	(_width+1)^0,c
  1500   000B22  0E00               	movlw	0
  1501   000B24  6E21               	movwf	_width^0,c
  1502   000B26  C021  F027         	movff	_width,_flags
  1503   000B2A                     
  1504                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1505   000B2A  6823               	setf	_prec^0,c
  1506   000B2C  6824               	setf	(_prec+1)^0,c
  1507   000B2E                     l1098:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1510   000B2E  5041               	movf	vfpfcnvrt@fmt^0,w,c
  1511   000B30  6ED9               	movwf	fsr2l,c
  1512   000B32  6ADA               	clrf	fsr2h,c
  1513   000B34  2ADF               	incf	indf2,f,c
  1514   000B36  EFAE  F005         	goto	l811
  1515   000B3A                     l1102:
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1518   000B3A  5041               	movf	vfpfcnvrt@fmt^0,w,c
  1519   000B3C  6ED9               	movwf	fsr2l,c
  1520   000B3E  6ADA               	clrf	fsr2h,c
  1521   000B40  CFDF FFF6          	movff	indf2,tblptrl
  1522   000B44                     	if	1	;There is more than 1 active tblptr byte
  1523   000B44  0E08               	movlw	high __smallconst
  1524   000B46  6EF7               	movwf	tblptrh,c
  1525   000B48                     	endif
  1526   000B48                     	if	0	;tblptru may be non-zero
  1527   000B48                     	endif
  1528   000B48                     	if	0	;tblptru may be non-zero
  1529   000B48                     	endif
  1530   000B48  0008               	tblrd		*
  1531   000B4A  50F5               	movf	tablat,w,c
  1532   000B4C  6E38               	movwf	fputc@c^0,c
  1533   000B4E  6A39               	clrf	(fputc@c+1)^0,c
  1534   000B50  C040  F03A         	movff	vfpfcnvrt@fp,fputc@fp
  1535   000B54  EC68  F004         	call	_fputc	;wreg free
  1536   000B58  EF97  F005         	goto	l1098
  1537   000B5C                     l811:
  1538   000B5C  0012               	return		;funcret
  1539   000B5E                     __end_of_vfpfcnvrt:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _fputc *****************
  1543 ;; Defined at:
  1544 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  c               2    0[COMRAM] int 
  1547 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1548 ;;		 -> sprintf@f(11), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  2    0[COMRAM] int 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1560 ;;      Params:         3       0       0       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1562 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1563 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1564 ;;Total ram usage:        8 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 1
  1567 ;; This function calls:
  1568 ;;		_putch
  1569 ;; This function is called by:
  1570 ;;		_vfpfcnvrt
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text6
  1575   0008D0                     __ptext6:
  1576                           	callstack 0
  1577   0008D0                     _fputc:
  1578                           	callstack 26
  1579   0008D0  503A               	movf	fputc@fp^0,w,c
  1580   0008D2  B4D8               	btfsc	status,2,c
  1581   0008D4  EF6E  F004         	goto	u171
  1582   0008D8  EF70  F004         	goto	u170
  1583   0008DC                     u171:
  1584   0008DC  EF78  F004         	goto	l1080
  1585   0008E0                     u170:
  1586   0008E0  503A               	movf	fputc@fp^0,w,c
  1587   0008E2  A4D8               	btfss	status,2,c
  1588   0008E4  EF76  F004         	goto	u181
  1589   0008E8  EF78  F004         	goto	u180
  1590   0008EC                     u181:
  1591   0008EC  EF7D  F004         	goto	l1082
  1592   0008F0                     u180:
  1593   0008F0                     l1080:
  1594   0008F0  5038               	movf	fputc@c^0,w,c
  1595   0008F2  EC2B  F006         	call	_putch
  1596   0008F6  EFBC  F004         	goto	l829
  1597   0008FA                     l1082:
  1598   0008FA  503A               	movf	fputc@fp^0,w,c
  1599   0008FC  6ED9               	movwf	fsr2l,c
  1600   0008FE  6ADA               	clrf	fsr2h,c
  1601   000900  0E09               	movlw	9
  1602   000902  26D9               	addwf	fsr2l,f,c
  1603   000904  50DE               	movf	postinc2,w,c
  1604   000906  10DE               	iorwf	postinc2,w,c
  1605   000908  B4D8               	btfsc	status,2,c
  1606   00090A  EF89  F004         	goto	u191
  1607   00090E  EF8B  F004         	goto	u190
  1608   000912                     u191:
  1609   000912  EFA4  F004         	goto	l1086
  1610   000916                     u190:
  1611   000916  503A               	movf	fputc@fp^0,w,c
  1612   000918  6ED9               	movwf	fsr2l,c
  1613   00091A  6ADA               	clrf	fsr2h,c
  1614   00091C  0E09               	movlw	9
  1615   00091E  26D9               	addwf	fsr2l,f,c
  1616   000920  503A               	movf	fputc@fp^0,w,c
  1617   000922  6EE1               	movwf	fsr1l,c
  1618   000924  6AE2               	clrf	fsr1h,c
  1619   000926  0E02               	movlw	2
  1620   000928  26E1               	addwf	fsr1l,f,c
  1621   00092A  50DE               	movf	postinc2,w,c
  1622   00092C  5CE6               	subwf	postinc1,w,c
  1623   00092E  50E6               	movf	postinc1,w,c
  1624   000930  0A80               	xorlw	128
  1625   000932  6E3F               	movwf	(??_fputc+4)^0,c
  1626   000934  50DE               	movf	postinc2,w,c
  1627   000936  0A80               	xorlw	128
  1628   000938  583F               	subwfb	(??_fputc+4)^0,w,c
  1629   00093A  B0D8               	btfsc	status,0,c
  1630   00093C  EFA2  F004         	goto	u201
  1631   000940  EFA4  F004         	goto	u200
  1632   000944                     u201:
  1633   000944  EFBC  F004         	goto	l829
  1634   000948                     u200:
  1635   000948                     l1086:
  1636   000948  503A               	movf	fputc@fp^0,w,c
  1637   00094A  6ED9               	movwf	fsr2l,c
  1638   00094C  6ADA               	clrf	fsr2h,c
  1639   00094E  0E02               	movlw	2
  1640   000950  26D9               	addwf	fsr2l,f,c
  1641   000952  50DF               	movf	indf2,w,c
  1642   000954  6E3B               	movwf	??_fputc^0,c
  1643   000956  503A               	movf	fputc@fp^0,w,c
  1644   000958  6ED9               	movwf	fsr2l,c
  1645   00095A  6ADA               	clrf	fsr2h,c
  1646   00095C  50DF               	movf	indf2,w,c
  1647   00095E  243B               	addwf	??_fputc^0,w,c
  1648   000960  6ED9               	movwf	fsr2l,c
  1649   000962  6ADA               	clrf	fsr2h,c
  1650   000964  C038  FFDF         	movff	fputc@c,indf2
  1651   000968  503A               	movf	fputc@fp^0,w,c
  1652   00096A  6ED9               	movwf	fsr2l,c
  1653   00096C  6ADA               	clrf	fsr2h,c
  1654   00096E  0E02               	movlw	2
  1655   000970  26D9               	addwf	fsr2l,f,c
  1656   000972  2ADE               	incf	postinc2,f,c
  1657   000974  0E00               	movlw	0
  1658   000976  22DD               	addwfc	postdec2,f,c
  1659   000978                     l829:
  1660   000978  0012               	return		;funcret
  1661   00097A                     __end_of_fputc:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _putch *****************
  1665 ;; Defined at:
  1666 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  c               1    wreg     unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  c               1    0[COMRAM] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_fputc
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text7
  1694   000C56                     __ptext7:
  1695                           	callstack 0
  1696   000C56                     _putch:
  1697                           	callstack 26
  1698   000C56  0012               	return		;funcret
  1699   000C58                     __end_of_putch:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _init_LCD *****************
  1703 ;; Defined at:
  1704 ;;		line 4 in file "lcd_lib.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 1
  1725 ;; This function calls:
  1726 ;;		_clear_LCD
  1727 ;;		_set_Cursor_LCD
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text8
  1734   000A04                     __ptext8:
  1735                           	callstack 0
  1736   000A04                     _init_LCD:
  1737                           	callstack 29
  1738   000A04                     
  1739                           ;lcd_lib.c: 6:     TRISD = 0x00;
  1740   000A04  6A95               	clrf	149,c	;volatile
  1741                           
  1742                           ;lcd_lib.c: 7:     LATD = 0x00;
  1743   000A06  6A8C               	clrf	140,c	;volatile
  1744                           
  1745                           ;lcd_lib.c: 10:     TRISBbits.RB3 = 0;
  1746   000A08  9693               	bcf	147,3,c	;volatile
  1747                           
  1748                           ;lcd_lib.c: 11:     TRISBbits.RB4 = 0;
  1749   000A0A  9893               	bcf	147,4,c	;volatile
  1750                           
  1751                           ;lcd_lib.c: 12:     LATBbits.LB3 = 0;
  1752   000A0C  968A               	bcf	138,3,c	;volatile
  1753                           
  1754                           ;lcd_lib.c: 13:     LATBbits.LB4 = 0;
  1755   000A0E  988A               	bcf	138,4,c	;volatile
  1756                           
  1757                           ;lcd_lib.c: 17:     LATBbits.LB3 = 0;
  1758   000A10  968A               	bcf	138,3,c	;volatile
  1759   000A12                     
  1760                           ;lcd_lib.c: 18:     LATD = 0b00111000;
  1761   000A12  0E38               	movlw	56
  1762   000A14  6E8C               	movwf	140,c	;volatile
  1763   000A16                     
  1764                           ;lcd_lib.c: 19:     LATBbits.LB4 = 1;
  1765   000A16  888A               	bsf	138,4,c	;volatile
  1766   000A18                     
  1767                           ;lcd_lib.c: 20:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1768   000A18  0E04               	movlw	4
  1769   000A1A  6E3C               	movwf	(??_init_LCD+1)^0,c
  1770   000A1C  0E0C               	movlw	12
  1771   000A1E  6E3B               	movwf	??_init_LCD^0,c
  1772   000A20  0E34               	movlw	52
  1773   000A22                     u347:
  1774   000A22  2EE8               	decfsz	wreg,f,c
  1775   000A24  D7FE               	bra	u347
  1776   000A26  2E3B               	decfsz	??_init_LCD^0,f,c
  1777   000A28  D7FC               	bra	u347
  1778   000A2A  2E3C               	decfsz	(??_init_LCD+1)^0,f,c
  1779   000A2C  D7FA               	bra	u347
  1780   000A2E                     
  1781                           ;lcd_lib.c: 21:     LATBbits.LB4 = 0;
  1782   000A2E  988A               	bcf	138,4,c	;volatile
  1783   000A30                     
  1784                           ;lcd_lib.c: 24:     LATD = 0b00001100;
  1785   000A30  0E0C               	movlw	12
  1786   000A32  6E8C               	movwf	140,c	;volatile
  1787   000A34                     
  1788                           ;lcd_lib.c: 25:     LATBbits.LB4 = 1;
  1789   000A34  888A               	bsf	138,4,c	;volatile
  1790                           
  1791                           ;lcd_lib.c: 26:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1792   000A36  0E04               	movlw	4
  1793   000A38  6E3C               	movwf	(??_init_LCD+1)^0,c
  1794   000A3A  0E0C               	movlw	12
  1795   000A3C  6E3B               	movwf	??_init_LCD^0,c
  1796   000A3E  0E34               	movlw	52
  1797   000A40                     u357:
  1798   000A40  2EE8               	decfsz	wreg,f,c
  1799   000A42  D7FE               	bra	u357
  1800   000A44  2E3B               	decfsz	??_init_LCD^0,f,c
  1801   000A46  D7FC               	bra	u357
  1802   000A48  2E3C               	decfsz	(??_init_LCD+1)^0,f,c
  1803   000A4A  D7FA               	bra	u357
  1804   000A4C                     
  1805                           ;lcd_lib.c: 27:     LATBbits.LB4 = 0;
  1806   000A4C  988A               	bcf	138,4,c	;volatile
  1807   000A4E                     
  1808                           ;lcd_lib.c: 30:     clear_LCD();
  1809   000A4E  EC04  F006         	call	_clear_LCD	;wreg free
  1810   000A52                     
  1811                           ;lcd_lib.c: 33:     LATD = 0b00000010;
  1812   000A52  0E02               	movlw	2
  1813   000A54  6E8C               	movwf	140,c	;volatile
  1814   000A56                     
  1815                           ;lcd_lib.c: 34:     LATBbits.LB4 = 1;
  1816   000A56  888A               	bsf	138,4,c	;volatile
  1817   000A58                     
  1818                           ;lcd_lib.c: 35:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1819   000A58  0E04               	movlw	4
  1820   000A5A  6E3C               	movwf	(??_init_LCD+1)^0,c
  1821   000A5C  0E0C               	movlw	12
  1822   000A5E  6E3B               	movwf	??_init_LCD^0,c
  1823   000A60  0E34               	movlw	52
  1824   000A62                     u367:
  1825   000A62  2EE8               	decfsz	wreg,f,c
  1826   000A64  D7FE               	bra	u367
  1827   000A66  2E3B               	decfsz	??_init_LCD^0,f,c
  1828   000A68  D7FC               	bra	u367
  1829   000A6A  2E3C               	decfsz	(??_init_LCD+1)^0,f,c
  1830   000A6C  D7FA               	bra	u367
  1831   000A6E                     
  1832                           ;lcd_lib.c: 36:     LATBbits.LB4 = 0;
  1833   000A6E  988A               	bcf	138,4,c	;volatile
  1834   000A70                     
  1835                           ;lcd_lib.c: 39:     set_Cursor_LCD(1,1);
  1836   000A70  0E01               	movlw	1
  1837   000A72  6E38               	movwf	set_Cursor_LCD@y^0,c
  1838   000A74  0E01               	movlw	1
  1839   000A76  EC3E  F005         	call	_set_Cursor_LCD
  1840   000A7A  0012               	return		;funcret
  1841   000A7C                     __end_of_init_LCD:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _set_Cursor_LCD *****************
  1845 ;; Defined at:
  1846 ;;		line 70 in file "lcd_lib.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  x               1    wreg     unsigned char 
  1849 ;;  y               1    0[COMRAM] unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  x               1    2[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         1       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1864 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:        3 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_init_LCD
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text9
  1876   000A7C                     __ptext9:
  1877                           	callstack 0
  1878   000A7C                     _set_Cursor_LCD:
  1879                           	callstack 30
  1880                           
  1881                           ;incstack = 0
  1882                           ;set_Cursor_LCD@x stored from wreg
  1883   000A7C  6E3A               	movwf	set_Cursor_LCD@x^0,c
  1884   000A7E                     
  1885                           ;lcd_lib.c: 72:     LATBbits.LB3 = 0;
  1886   000A7E  968A               	bcf	138,3,c	;volatile
  1887                           
  1888                           ;lcd_lib.c: 73:     switch(x){
  1889   000A80  EF6E  F005         	goto	l1136
  1890   000A84                     l1110:
  1891                           
  1892                           ;lcd_lib.c: 75:             LATD = 0b10000000+(y-1);
  1893   000A84  5038               	movf	set_Cursor_LCD@y^0,w,c
  1894   000A86  0F7F               	addlw	127
  1895   000A88  6E8C               	movwf	140,c	;volatile
  1896   000A8A                     
  1897                           ;lcd_lib.c: 76:             LATBbits.LB4 = 1;
  1898   000A8A  888A               	bsf	138,4,c	;volatile
  1899   000A8C                     
  1900                           ;lcd_lib.c: 77:             _delay((unsigned long)((5)*(48000000UL/4000.0)));
  1901   000A8C  0E4E               	movlw	78
  1902   000A8E  6E39               	movwf	??_set_Cursor_LCD^0,c
  1903   000A90  0EEB               	movlw	235
  1904   000A92                     u377:
  1905   000A92  2EE8               	decfsz	wreg,f,c
  1906   000A94  D7FE               	bra	u377
  1907   000A96  2E39               	decfsz	??_set_Cursor_LCD^0,f,c
  1908   000A98  D7FC               	bra	u377
  1909   000A9A  0000               	nop	
  1910   000A9C                     
  1911                           ;lcd_lib.c: 78:             LATBbits.LB4 = 0;
  1912   000A9C  988A               	bcf	138,4,c	;volatile
  1913                           
  1914                           ;lcd_lib.c: 79:             break;
  1915   000A9E  EF79  F005         	goto	l37
  1916   000AA2                     l1118:
  1917                           
  1918                           ;lcd_lib.c: 81:             LATD = 0b10000000+0x40+(y-1);
  1919   000AA2  5038               	movf	set_Cursor_LCD@y^0,w,c
  1920   000AA4  0FBF               	addlw	191
  1921   000AA6  6E8C               	movwf	140,c	;volatile
  1922   000AA8                     
  1923                           ;lcd_lib.c: 82:             LATBbits.LB4 = 1;
  1924   000AA8  888A               	bsf	138,4,c	;volatile
  1925   000AAA                     
  1926                           ;lcd_lib.c: 83:             _delay((unsigned long)((5)*(48000000UL/4000.0)));
  1927   000AAA  0E4E               	movlw	78
  1928   000AAC  6E39               	movwf	??_set_Cursor_LCD^0,c
  1929   000AAE  0EEB               	movlw	235
  1930   000AB0                     u387:
  1931   000AB0  2EE8               	decfsz	wreg,f,c
  1932   000AB2  D7FE               	bra	u387
  1933   000AB4  2E39               	decfsz	??_set_Cursor_LCD^0,f,c
  1934   000AB6  D7FC               	bra	u387
  1935   000AB8  0000               	nop	
  1936   000ABA                     
  1937                           ;lcd_lib.c: 84:             LATBbits.LB4 = 0;
  1938   000ABA  988A               	bcf	138,4,c	;volatile
  1939                           
  1940                           ;lcd_lib.c: 85:             break;
  1941   000ABC  EF79  F005         	goto	l37
  1942   000AC0                     l1126:
  1943                           
  1944                           ;lcd_lib.c: 87:             LATD = 0b10000000;
  1945   000AC0  0E80               	movlw	128
  1946   000AC2  6E8C               	movwf	140,c	;volatile
  1947   000AC4                     
  1948                           ;lcd_lib.c: 88:             LATBbits.LB4 = 1;
  1949   000AC4  888A               	bsf	138,4,c	;volatile
  1950   000AC6                     
  1951                           ;lcd_lib.c: 89:             _delay((unsigned long)((5)*(48000000UL/4000.0)));
  1952   000AC6  0E4E               	movlw	78
  1953   000AC8  6E39               	movwf	??_set_Cursor_LCD^0,c
  1954   000ACA  0EEB               	movlw	235
  1955   000ACC                     u397:
  1956   000ACC  2EE8               	decfsz	wreg,f,c
  1957   000ACE  D7FE               	bra	u397
  1958   000AD0  2E39               	decfsz	??_set_Cursor_LCD^0,f,c
  1959   000AD2  D7FC               	bra	u397
  1960   000AD4  0000               	nop	
  1961   000AD6                     
  1962                           ;lcd_lib.c: 90:             LATBbits.LB4 = 0;
  1963   000AD6  988A               	bcf	138,4,c	;volatile
  1964                           
  1965                           ;lcd_lib.c: 91:             break;
  1966   000AD8  EF79  F005         	goto	l37
  1967   000ADC                     l1136:
  1968   000ADC  503A               	movf	set_Cursor_LCD@x^0,w,c
  1969                           
  1970                           ; Switch size 1, requested type "simple"
  1971                           ; Number of cases is 2, Range of values is 1 to 2
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte            7     4 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976   000ADE  0A01               	xorlw	1	; case 1
  1977   000AE0  B4D8               	btfsc	status,2,c
  1978   000AE2  EF42  F005         	goto	l1110
  1979   000AE6  0A03               	xorlw	3	; case 2
  1980   000AE8  B4D8               	btfsc	status,2,c
  1981   000AEA  EF51  F005         	goto	l1118
  1982   000AEE  EF60  F005         	goto	l1126
  1983   000AF2                     l37:
  1984   000AF2  0012               	return		;funcret
  1985   000AF4                     __end_of_set_Cursor_LCD:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _clear_LCD *****************
  1989 ;; Defined at:
  1990 ;;		line 43 in file "lcd_lib.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2004 ;;      Params:         0       0       0       0       0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2007 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2008 ;;Total ram usage:        1 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_init_LCD
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text10
  2019   000C08                     __ptext10:
  2020                           	callstack 0
  2021   000C08                     _clear_LCD:
  2022                           	callstack 29
  2023   000C08                     
  2024                           ;lcd_lib.c: 44:     LATBbits.LB3 = 0;
  2025   000C08  968A               	bcf	138,3,c	;volatile
  2026   000C0A                     
  2027                           ;lcd_lib.c: 45:     LATD = 0b00000001;
  2028   000C0A  0E01               	movlw	1
  2029   000C0C  6E8C               	movwf	140,c	;volatile
  2030   000C0E                     
  2031                           ;lcd_lib.c: 46:     LATBbits.LB4 = 1;
  2032   000C0E  888A               	bsf	138,4,c	;volatile
  2033   000C10                     
  2034                           ;lcd_lib.c: 47:     _delay((unsigned long)((5)*(48000000UL/4000.0)));
  2035   000C10  0E4E               	movlw	78
  2036   000C12  6E38               	movwf	??_clear_LCD^0,c
  2037   000C14  0EEB               	movlw	235
  2038   000C16                     u407:
  2039   000C16  2EE8               	decfsz	wreg,f,c
  2040   000C18  D7FE               	bra	u407
  2041   000C1A  2E38               	decfsz	??_clear_LCD^0,f,c
  2042   000C1C  D7FC               	bra	u407
  2043   000C1E  0000               	nop	
  2044   000C20                     
  2045                           ;lcd_lib.c: 48:     LATBbits.LB4 = 0;
  2046   000C20  988A               	bcf	138,4,c	;volatile
  2047   000C22  0012               	return		;funcret
  2048   000C24                     __end_of_clear_LCD:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _SPI_Tx *****************
  2052 ;; Defined at:
  2053 ;;		line 93 in file "SPI.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  dato            1    wreg     unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  dato            1    0[COMRAM] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0
  2068 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2070 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2071 ;;Total ram usage:        1 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text11
  2081   000C4E                     __ptext11:
  2082                           	callstack 0
  2083   000C4E                     _SPI_Tx:
  2084                           	callstack 30
  2085                           
  2086                           ;incstack = 0
  2087                           ;SPI_Tx@dato stored from wreg
  2088   000C4E  6E38               	movwf	SPI_Tx@dato^0,c
  2089   000C50                     
  2090                           ;SPI.c: 94:     SSPBUF = dato;
  2091   000C50  C038  FFC9         	movff	SPI_Tx@dato,4041	;volatile
  2092   000C54  0012               	return		;funcret
  2093   000C56                     __end_of_SPI_Tx:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _SPI_Init_Master *****************
  2097 ;; Defined at:
  2098 ;;		line 4 in file "SPI.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  reloj           1    wreg     unsigned char 
  2101 ;;  modo            1    0[COMRAM] unsigned char 
  2102 ;;  smp             1    1[COMRAM] unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  reloj           1    2[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         2       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        3 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text12
  2128   00097A                     __ptext12:
  2129                           	callstack 0
  2130   00097A                     _SPI_Init_Master:
  2131                           	callstack 30
  2132                           
  2133                           ;incstack = 0
  2134                           ;SPI_Init_Master@reloj stored from wreg
  2135   00097A  6E3A               	movwf	SPI_Init_Master@reloj^0,c
  2136   00097C                     
  2137                           ;SPI.c: 7:     ADCON1 = 0x0F;
  2138   00097C  0E0F               	movlw	15
  2139   00097E  6EC1               	movwf	193,c	;volatile
  2140   000980                     
  2141                           ;SPI.c: 10:     TRISBbits.RB0 = 1;
  2142   000980  8093               	bsf	147,0,c	;volatile
  2143   000982                     
  2144                           ;SPI.c: 11:     TRISBbits.RB1 = 0;
  2145   000982  9293               	bcf	147,1,c	;volatile
  2146   000984                     
  2147                           ;SPI.c: 12:     TRISAbits.RA5 = 0;
  2148   000984  9A92               	bcf	146,5,c	;volatile
  2149   000986                     
  2150                           ;SPI.c: 13:     TRISCbits.RC7 = 0;
  2151   000986  9E94               	bcf	148,7,c	;volatile
  2152   000988                     
  2153                           ;SPI.c: 16:     SSPCON1bits.SSPM = reloj;
  2154   000988  50C6               	movf	198,w,c	;volatile
  2155   00098A  183A               	xorwf	SPI_Init_Master@reloj^0,w,c
  2156   00098C  0BF0               	andlw	-16
  2157   00098E  183A               	xorwf	SPI_Init_Master@reloj^0,w,c
  2158   000990  6EC6               	movwf	198,c	;volatile
  2159   000992                     
  2160                           ;SPI.c: 24:     if (modo == '1'){
  2161   000992  0E31               	movlw	49
  2162   000994  1838               	xorwf	SPI_Init_Master@modo^0,w,c
  2163   000996  A4D8               	btfss	status,2,c
  2164   000998  EFD0  F004         	goto	u241
  2165   00099C  EFD2  F004         	goto	u240
  2166   0009A0                     u241:
  2167   0009A0  EFD6  F004         	goto	l1212
  2168   0009A4                     u240:
  2169   0009A4                     
  2170                           ;SPI.c: 25:         SSPCON1bits.CKP = 1;
  2171   0009A4  88C6               	bsf	198,4,c	;volatile
  2172                           
  2173                           ;SPI.c: 26:         SSPSTATbits.CKE = 1;
  2174   0009A6  8CC7               	bsf	199,6,c	;volatile
  2175                           
  2176                           ;SPI.c: 27:     }
  2177   0009A8  EFFB  F004         	goto	l85
  2178   0009AC                     l1212:
  2179   0009AC  0E32               	movlw	50
  2180   0009AE  1838               	xorwf	SPI_Init_Master@modo^0,w,c
  2181   0009B0  A4D8               	btfss	status,2,c
  2182   0009B2  EFDD  F004         	goto	u251
  2183   0009B6  EFDF  F004         	goto	u250
  2184   0009BA                     u251:
  2185   0009BA  EFE3  F004         	goto	l1216
  2186   0009BE                     u250:
  2187   0009BE                     
  2188                           ;SPI.c: 29:         SSPCON1bits.CKP = 0;
  2189   0009BE  98C6               	bcf	198,4,c	;volatile
  2190                           
  2191                           ;SPI.c: 30:         SSPSTATbits.CKE = 1;
  2192   0009C0  8CC7               	bsf	199,6,c	;volatile
  2193                           
  2194                           ;SPI.c: 31:     }
  2195   0009C2  EFFB  F004         	goto	l85
  2196   0009C6                     l1216:
  2197   0009C6  0E33               	movlw	51
  2198   0009C8  1838               	xorwf	SPI_Init_Master@modo^0,w,c
  2199   0009CA  A4D8               	btfss	status,2,c
  2200   0009CC  EFEA  F004         	goto	u261
  2201   0009D0  EFEC  F004         	goto	u260
  2202   0009D4                     u261:
  2203   0009D4  EFF0  F004         	goto	l1220
  2204   0009D8                     u260:
  2205   0009D8                     
  2206                           ;SPI.c: 33:         SSPCON1bits.CKP = 1;
  2207   0009D8  88C6               	bsf	198,4,c	;volatile
  2208                           
  2209                           ;SPI.c: 34:         SSPSTATbits.CKE = 0;
  2210   0009DA  9CC7               	bcf	199,6,c	;volatile
  2211                           
  2212                           ;SPI.c: 35:     }
  2213   0009DC  EFFB  F004         	goto	l85
  2214   0009E0                     l1220:
  2215   0009E0  0E34               	movlw	52
  2216   0009E2  1838               	xorwf	SPI_Init_Master@modo^0,w,c
  2217   0009E4  A4D8               	btfss	status,2,c
  2218   0009E6  EFF7  F004         	goto	u271
  2219   0009EA  EFF9  F004         	goto	u270
  2220   0009EE                     u271:
  2221   0009EE  EFFB  F004         	goto	l85
  2222   0009F2                     u270:
  2223   0009F2                     
  2224                           ;SPI.c: 37:         SSPCON1bits.CKP = 0;
  2225   0009F2  98C6               	bcf	198,4,c	;volatile
  2226                           
  2227                           ;SPI.c: 38:         SSPSTATbits.CKE = 0;
  2228   0009F4  9CC7               	bcf	199,6,c	;volatile
  2229   0009F6                     l85:
  2230                           
  2231                           ;SPI.c: 42:     SSPSTATbits.SMP = smp;
  2232   0009F6  B039               	btfsc	SPI_Init_Master@smp^0,0,c
  2233   0009F8  D002               	bra	u285
  2234   0009FA  9EC7               	bcf	199,7,c	;volatile
  2235   0009FC  D001               	bra	u286
  2236   0009FE                     u285:
  2237   0009FE  8EC7               	bsf	199,7,c	;volatile
  2238   000A00                     u286:
  2239                           
  2240                           ;SPI.c: 46:     SSPCON1bits.SSPEN = 1;
  2241   000A00  8AC6               	bsf	198,5,c	;volatile
  2242   000A02  0012               	return		;funcret
  2243   000A04                     __end_of_SPI_Init_Master:
  2244                           	callstack 0
  2245                           
  2246                           	psect	rparam
  2247   000001                     ___rparam_used  equ	1
  2248   000000                     ___param_bank   equ	0
  2249   000000                     __Lparam        equ	__Lrparam
  2250   000000                     __Hparam        equ	__Hrparam
  2251                           
  2252                           	psect	config
  2253                           
  2254                           ;Config register CONFIG1L @ 0x300000
  2255                           ;	PLL Prescaler Selection bits
  2256                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  2257                           ;	System Clock Postscaler Selection bits
  2258                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2259                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2260                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2261   300000                     	org	3145728
  2262   300000  04                 	db	4
  2263                           
  2264                           ;Config register CONFIG1H @ 0x300001
  2265                           ;	Oscillator Selection bits
  2266                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  2267                           ;	Fail-Safe Clock Monitor Enable bit
  2268                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2269                           ;	Internal/External Oscillator Switchover bit
  2270                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2271   300001                     	org	3145729
  2272   300001  0E                 	db	14
  2273                           
  2274                           ;Config register CONFIG2L @ 0x300002
  2275                           ;	Power-up Timer Enable bit
  2276                           ;	PWRT = OFF, PWRT disabled
  2277                           ;	Brown-out Reset Enable bits
  2278                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2279                           ;	Brown-out Reset Voltage bits
  2280                           ;	BORV = 3, Minimum setting 2.05V
  2281                           ;	USB Voltage Regulator Enable bit
  2282                           ;	VREGEN = OFF, USB voltage regulator disabled
  2283   300002                     	org	3145730
  2284   300002  19                 	db	25
  2285                           
  2286                           ;Config register CONFIG2H @ 0x300003
  2287                           ;	Watchdog Timer Enable bit
  2288                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2289                           ;	Watchdog Timer Postscale Select bits
  2290                           ;	WDTPS = 32768, 1:32768
  2291   300003                     	org	3145731
  2292   300003  1E                 	db	30
  2293                           
  2294                           ; Padding undefined space
  2295   300004                     	org	3145732
  2296   300004  FF                 	db	255
  2297                           
  2298                           ;Config register CONFIG3H @ 0x300005
  2299                           ;	CCP2 MUX bit
  2300                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2301                           ;	PORTB A/D Enable bit
  2302                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2303                           ;	Low-Power Timer 1 Oscillator Enable bit
  2304                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2305                           ;	MCLR Pin Enable bit
  2306                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2307   300005                     	org	3145733
  2308   300005  83                 	db	131
  2309                           
  2310                           ;Config register CONFIG4L @ 0x300006
  2311                           ;	Stack Full/Underflow Reset Enable bit
  2312                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2313                           ;	Single-Supply ICSP Enable bit
  2314                           ;	LVP = ON, Single-Supply ICSP enabled
  2315                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2316                           ;	ICPRT = OFF, ICPORT disabled
  2317                           ;	Extended Instruction Set Enable bit
  2318                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2319                           ;	Background Debugger Enable bit
  2320                           ;	DEBUG = 0x1, unprogrammed default
  2321   300006                     	org	3145734
  2322   300006  85                 	db	133
  2323                           
  2324                           ; Padding undefined space
  2325   300007                     	org	3145735
  2326   300007  FF                 	db	255
  2327                           
  2328                           ;Config register CONFIG5L @ 0x300008
  2329                           ;	Code Protection bit
  2330                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2331                           ;	Code Protection bit
  2332                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2333                           ;	Code Protection bit
  2334                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2335                           ;	Code Protection bit
  2336                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2337   300008                     	org	3145736
  2338   300008  0F                 	db	15
  2339                           
  2340                           ;Config register CONFIG5H @ 0x300009
  2341                           ;	Boot Block Code Protection bit
  2342                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2343                           ;	Data EEPROM Code Protection bit
  2344                           ;	CPD = OFF, Data EEPROM is not code-protected
  2345   300009                     	org	3145737
  2346   300009  C0                 	db	192
  2347                           
  2348                           ;Config register CONFIG6L @ 0x30000A
  2349                           ;	Write Protection bit
  2350                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2351                           ;	Write Protection bit
  2352                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2353                           ;	Write Protection bit
  2354                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2355                           ;	Write Protection bit
  2356                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2357   30000A                     	org	3145738
  2358   30000A  0F                 	db	15
  2359                           
  2360                           ;Config register CONFIG6H @ 0x30000B
  2361                           ;	Configuration Register Write Protection bit
  2362                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2363                           ;	Boot Block Write Protection bit
  2364                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2365                           ;	Data EEPROM Write Protection bit
  2366                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2367   30000B                     	org	3145739
  2368   30000B  E0                 	db	224
  2369                           
  2370                           ;Config register CONFIG7L @ 0x30000C
  2371                           ;	Table Read Protection bit
  2372                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2373                           ;	Table Read Protection bit
  2374                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2375                           ;	Table Read Protection bit
  2376                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2377                           ;	Table Read Protection bit
  2378                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2379   30000C                     	org	3145740
  2380   30000C  0F                 	db	15
  2381                           
  2382                           ;Config register CONFIG7H @ 0x30000D
  2383                           ;	Boot Block Table Read Protection bit
  2384                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2385   30000D                     	org	3145741
  2386   30000D  40                 	db	64
  2387                           tosu	equ	0xFFF
  2388                           tosh	equ	0xFFE
  2389                           tosl	equ	0xFFD
  2390                           stkptr	equ	0xFFC
  2391                           pclatu	equ	0xFFB
  2392                           pclath	equ	0xFFA
  2393                           pcl	equ	0xFF9
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           indf0	equ	0xFEF
  2401                           postinc0	equ	0xFEE
  2402                           postdec0	equ	0xFED
  2403                           preinc0	equ	0xFEC
  2404                           plusw0	equ	0xFEB
  2405                           fsr0h	equ	0xFEA
  2406                           fsr0l	equ	0xFE9
  2407                           wreg	equ	0xFE8
  2408                           indf1	equ	0xFE7
  2409                           postinc1	equ	0xFE6
  2410                           postdec1	equ	0xFE5
  2411                           preinc1	equ	0xFE4
  2412                           plusw1	equ	0xFE3
  2413                           fsr1h	equ	0xFE2
  2414                           fsr1l	equ	0xFE1
  2415                           bsr	equ	0xFE0
  2416                           indf2	equ	0xFDF
  2417                           postinc2	equ	0xFDE
  2418                           postdec2	equ	0xFDD
  2419                           preinc2	equ	0xFDC
  2420                           plusw2	equ	0xFDB
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         55
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      86
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> DATA_LCD(COMRAM[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> DATA_LCD(COMRAM[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S959$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> DATA_LCD(COMRAM[16]), 

    S959$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[13]), STR_2(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> DATA_LCD(COMRAM[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[13]), STR_2(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[13]), STR_2(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    writeString_LCD@dato_LCD	PTR const unsigned char  size(1) Largest target is 16
		 -> DATA_LCD(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _writeString_LCD->_writeChar_LCD
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _init_LCD->_set_Cursor_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1101
                                             29 COMRAM     2     2      0
                    _SPI_Init_Master
                             _SPI_Tx
                          _clear_LCD
                           _init_LCD
                     _set_Cursor_LCD
                            _sprintf
                    _writeString_LCD
 ---------------------------------------------------------------------------------
 (1) _writeString_LCD                                      3     2      1     107
                                              1 COMRAM     3     2      1
                      _writeChar_LCD
 ---------------------------------------------------------------------------------
 (2) _writeChar_LCD                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    14      2     686
                                             15 COMRAM    14    12      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3     485
                                             11 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                            7     4      3     363
                                              8 COMRAM     3     0      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     228
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             2     2      0      76
                                              3 COMRAM     2     2      0
                          _clear_LCD
                     _set_Cursor_LCD
 ---------------------------------------------------------------------------------
 (1) _set_Cursor_LCD                                       3     2      1      76
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Tx                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Master                                      3     1      2     141
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init_Master
   _SPI_Tx
   _clear_LCD
   _init_LCD
     _clear_LCD
     _set_Cursor_LCD
   _set_Cursor_LCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
   _writeString_LCD
     _writeChar_LCD

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     31      86     90.5%
BITBIGSFRlh         60      0       0      0.0%
BITBIGSFRh          57      0       0      0.0%
BITBIGSFRll         41      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      86      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 02 21:34:55 2025

            _SSPSTATbits 0FC7                       l20 0C22                       l23 0C4C  
                     l17 0A7A                       l37 0AF2                       l29 0BD2  
                     l91 0A02                       l85 09F6                      l104 0C54  
                    l811 0B5C                      l840 0C56                      l920 0C44  
                    l817 0B9A                      l922 0C4A                      l914 0C3C  
                    l916 0C3E                      l829 0978                      l918 0C42  
                    l880 0C10                      l882 0C20                      l874 0C08  
                    l876 0C0A                      l788 0C06                      l878 0C0E  
                    u200 0948                      u201 0944                      u210 0B16  
                    u211 0B12                      u220 0B92                      u221 0B8E  
                    u230 0BD2                      u231 0BCE                      u240 09A4  
                    u241 09A0                      u250 09BE                      u170 08E0  
                    u251 09BA                      u171 08DC                      u307 0890  
                    u260 09D8                      u180 08F0                      u261 09D4  
                    u181 08EC                      u317 08AC                      u270 09F2  
                    u190 0916                      u271 09EE                      u407 0C16  
                    u191 0912                      u327 08BE                      u337 0C46  
                    u347 0A22                      u285 09FE                      u357 0A40  
                    u286 0A00                      u367 0A62                      u377 0A92  
                    u297 0868                      u387 0AB0                      u397 0ACC  
                    wreg 0FE8                     l1010 0C50                     l1110 0A84  
                   l1102 0B3A                     l1200 0982                     l1120 0AA8  
                   l1112 0A8A                     l1210 09A4                     l1202 0984  
                   l1130 0AC6                     l1122 0AAA                     l1114 0A8C  
                   l1220 09E0                     l1212 09AC                     l1204 0986  
                   l1132 0AD6                     l1124 0ABA                     l1116 0A9C  
                   l1108 0A7E                     l1140 0B66                     l1222 09F2  
                   l1214 09BE                     l1206 0988                     l1126 0AC0  
                   l1118 0AA2                     l1150 0A12                     l1142 0B76  
                   l1230 0838                     l1216 09C6                     l1208 0992  
                   l1128 0AC4                     l1136 0ADC                     l1160 0A34  
                   l1152 0A16                     l1080 08F0                     l1144 0B92  
                   l1240 0874                     l1232 0840                     l1224 081E  
                   l1218 09D8                     l1170 0A58                     l1162 0A4C  
                   l1154 0A18                     l1082 08FA                     l1090 0AF4  
                   l1138 0B5E                     l1250 08A6                     l1242 0878  
                   l1234 084C                     l1226 0822                     l1172 0A6E  
                   l1164 0A4E                     l1156 0A2E                     l1148 0A04  
                   l1084 0916                     l1076 08D0                     l1092 0B16  
                   l1180 0BB6                     l1252 08B6                     l1244 0886  
                   l1236 0856                     l1228 082E                     l1174 0A70  
                   l1166 0A52                     l1158 0A30                     l1086 0948  
                   l1078 08E0                     l1094 0B1E                     l1190 0BEC  
                   l1182 0BBA                     l1254 08B8                     l1246 089E  
                   l1238 085E                     l1168 0A56                     l1096 0B2A  
                   l1192 0BFC                     l1184 0BD4                     l1176 0B9C  
                   l1248 08A0                     l1098 0B2E                     l1186 0BDC  
                   l1178 0BA8                     l1196 097C                     l1188 0BE4  
                   l1198 0980                     STR_1 080F                     STR_2 0801  
                   _LATD 0F8C                     _data 0025                     _dbuf 0001  
                   _main 081E                     _prec 0023                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_main 0038             vfpfcnvrt@fmt 0041                    _TRISD 0F95  
__end_of_SPI_Init_Master 0A04    writeChar_LCD@dato_LCD 0038                    _flags 0027  
                  _fputc 08D0                    _width 0021                    _putch 0C56  
                  tablat 0FF5                    status 0FD8          __end_of_sprintf 0C08  
        __initialization 0C24             __end_of_main 08D0                   ??_main 0055  
          __activetblptr 0002                   _ADCON1 0FC1                   ?_fputc 0038  
                 ?_putch 0038                   _SSPBUF 0FC9                   _SPI_Tx 0C4E  
           vfprintf@cfmt 0046         __end_of_init_LCD 0A7C           _set_Cursor_LCD 0A7C  
                 clear_0 0C2A                   isa$std 0001                   fputc@c 0038  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8                   putch@c 0038         ?_SPI_Init_Master 0038  
       __end_of_vfprintf 0B9C                ??_sprintf 0049               __accesstop 0060  
__end_of__initialization 0C30            ___rparam_used 0001           __pcstackCOMRAM 0038  
       writeString_LCD@i 003A   __end_of_set_Cursor_LCD 0AF4            __end_of_fputc 097A  
          __end_of_putch 0C58        ??_writeString_LCD 003A                  ??_fputc 003B  
                ??_putch 0038                  ?_SPI_Tx 0038            _writeChar_LCD 0C3A  
        ?_set_Cursor_LCD 0038                ?_init_LCD 0038        __end_of_clear_LCD 0C24  
         ?_writeChar_LCD 0038                  __Hparam 0000                  __Lparam 0000  
     SPI_Init_Master@smp 0039                ?_vfprintf 0043             __psmallconst 0800  
                __pcinit 0C24                  __ramtop 0800                  __ptext0 081E  
                __ptext1 0B9C                  __ptext2 0C3A                  __ptext3 0BD4  
                __ptext4 0B5E                  __ptext5 0AF4                  __ptext6 08D0  
                __ptext7 0C56                  __ptext8 0A04                  __ptext9 0A7C  
                _sprintf 0BD4     end_of_initialization 0C30               ??_init_LCD 003B  
                fputc@fp 003A            __Lmediumconst 0000        __end_of_vfpfcnvrt 0B5E  
                postdec2 0FDD                  postinc0 0FEE                  postinc1 0FE6  
                postinc2 0FDE               ??_vfprintf 0046                _TRISAbits 0F92  
              _TRISBbits 0F93                _TRISCbits 0F94          ??_writeChar_LCD 0038  
         __end_of_SPI_Tx 0C56          _writeString_LCD 0B9C              vfpfcnvrt@ap 0042  
            vfpfcnvrt@fp 0040      start_initialization 0C24                 ??_SPI_Tx 0038  
       ??_set_Cursor_LCD 0039              vfprintf@fmt 0044              __pbssCOMRAM 0001  
   SPI_Init_Master@reloj 003A  __end_of_writeString_LCD 0BD4                _clear_LCD 0C08  
            __smallconst 0800                 _DATA_LCD 0028                 ?_sprintf 0047  
               _LATAbits 0F89                 _LATBbits 0F8A               ?_clear_LCD 0038  
      ??_SPI_Init_Master 003A                _vfpfcnvrt 0AF4         ?_writeString_LCD 0039  
             SPI_Tx@dato 0038  writeString_LCD@dato_LCD 0039                 __Hrparam 0000  
             vfprintf@ap 0045                 __Lrparam 0000               vfprintf@fp 0043  
             ?_vfpfcnvrt 0040      SPI_Init_Master@modo 0038               sprintf@fmt 0048  
               __ptext10 0C08                 __ptext11 0C4E                 __ptext12 097A  
               _init_LCD 0A04    __end_of_writeChar_LCD 0C4E              ??_clear_LCD 0038  
               isa$xinst 0000                 _vfprintf 0B5E                sprintf@ap 0049  
        set_Cursor_LCD@x 003A          set_Cursor_LCD@y 0038              ??_vfpfcnvrt 0043  
               sprintf@f 004A                 sprintf@s 0047              _SSPCON1bits 0FC6  
        _SPI_Init_Master 097A  
